DROP VIEW IF EXISTS ascendco.custom_types; -- Previous schema location.CREATE OR REPLACE VIEW dba.custom_types ASWITH type_info AS (   SELECT t.typrelid AS type_oid,          t.typowner::regrole::text AS type_owner, -- ::text to make for easy searching          t.typnamespace::regnamespace AS type_schema,          t.typname AS type_name     FROM pg_type t-- Find custom, composite types.    WHERE (SELECT c.relkind = 'c'             FROM pg_catalog.pg_class c            WHERE c.oid = t.typrelid) and                  t.typnamespace::regnamespace not in ('pg_catalog', 'information_schema', 'extensions') )-- Get the position, name, and type details of a custom type.SELECT type_info.type_owner,       type_info.type_schema,       type_info.type_name,       pg_attribute.attnum AS attribute_number,       pg_attribute.attname AS attribute_name,       pg_type.typname AS attribute_type  FROM pg_attribute  JOIN pg_type   ON (pg_attribute.atttypid = pg_type.oid)  JOIN pg_class  ON (pg_attribute.attrelid = pg_class.oid)  JOIN type_info ON (pg_attribute.attrelid = type_info.type_oid) WHERE not exists (SELECT 1                    FROM pg_catalog.pg_type el                   WHERE el.oid = pg_type.typelem and                         el.typarray = pg_type.oid);ALTER VIEW dba.custom_types	OWNER TO user_change_structure;-------------------------------------------------- Register view------------------------------------------------CALL view_register ('dba','custom_types','Lists our custom types created with CREATE TYPE.');