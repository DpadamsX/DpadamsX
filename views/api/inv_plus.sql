CREATE OR REPLACE VIEW api.inv_plus ASSELECT    inv.id,    inv.marked_for_deletion,    inv.item_id,    inv.inv_no,    inv.their_name,--  Lookup fields    coalesce (item.name_, '')                  AS item_name,    coalesce (inv_getdesc(inv.id), '')         AS description,    coalesce (facility_location.name_,'')      AS facility_location,    facility_get_name (standard_faclity_id)    AS standard_facility,    facility_get_name (store_at_facility_id)   AS store_at_facility,--  More raw fields    inv.created_dts,    inv.updated_dts,    inv.serial_no_as_of_dts,    inv.qty,    inv.flow,    inv.flow_long,    inv.par,    inv.last_seen_date,    inv.their_next_repair_date,    inv.last_sterilized_date,    inv.repair_last_repair_date,    inv.is_found,    inv.is_go_live_perm_printed,    inv.is_facility_loc_inherited,    inv.is_contents_incomplete,    inv.is_deactivated,    inv.needs_repair,    inv.is_searched_but_not_found,    inv.is_wrong_loc,    inv.is_handwritten_label,    inv.is_sleeping,    inv.category,    inv.their_id,    inv.their_location,    inv.created_by,    inv.updated_by,    inv.their_id_scrubbed,    inv.crossing_status,    inv.their_raw_name,    inv.comments_,    inv.their_bar_code,    inv.loc_rack,    inv.loc_row,    inv.loc_bin,    inv.loc_note,    inv.serial_no,    inv.data_cleanse_classification,    inv.repair_next_due,    inv.repair_last_repaired_by,    inv.msgs    FROM inv LEFT JOIN item              ON inv.item_id           = item.id LEFT JOIN facility_location ON facility_location.id  = inv.facility_location_id ;ALTER VIEW api.inv_plus    OWNER TO user_change_structure;-------------------------------------------------- Register view------------------------------------------------CALL view_register ('api','inv_plus','Inv data, with lookup values.');