DROP VIEW IF EXISTS api.target_count_comparison;CREATE VIEW api.target_count_comparison AS-- Ummm...this all feels a bit too involved. There's likely a simpler way.-- Still it's fast, and it works. I verified the output by manually checking-- what should be generated in advance.---------------------------------------------------- First get two days of counts---------------------------------------------------- The dba.target_count table holds a daily count snapshot for tables of interest.WITHsource_data AS (select hsys_id,       qualified_name,       count_date,       current_date     as today,       current_date - 1 as yesterday,       records_count  from target_count where count_date = current_date    or count_date = current_date - 1),---------------------------------------------------- Now generate comparisons based on the two days---------------------------------------------------- Use the lag() function to look back to the previous day.-- The coalesce calls are to get a 0 insead of NULL when there is no reading.comparison_data AS (select hsys_id,       qualified_name,       today,       count_date,       yesterday,       coalesce(lag(records_count,1) OVER          (partition by hsys_id, qualified_name  -- GROUP by hsys and target.               order by count_date ASC)          -- Sort the grouping by date.        ,0) as yesterdays_count,       coalesce (records_count) as todays_count  from source_data),-------------------------------------------------- Add change count and comment label------------------------------------------------comparisons_plus AS (select hsys.name_ AS hsys_name,       qualified_name,       yesterday,       count_date,       today,       yesterdays_count,       todays_count,       todays_count - yesterdays_count as daily_change,       case          when todays_count - yesterdays_count < 0 then '? Records were removed'          when todays_count - yesterdays_count = 0 then '* No data was added'          when todays_count - yesterdays_count > 0 then '+ Records were added '      end as comments from comparison_data join hsys on hsys.id = comparison_data.hsys_id) -------------------------------------------------- -- Reduce to just the rows we want -------------------------------------------------- select *   from comparisons_plus  where count_date = current_date;COMMENT ON VIEW api.target_count_comparison IS 'Compare target row counts of interest between today and yesterday. Not really meant to be called live, this view is more of a place to stash a query.';ALTER VIEW api.target_count_comparison    OWNER TO user_change_structure;-------------------------------------------------- Register view------------------------------------------------CALL view_register ('api','target_count_comparison','Compare target row counts of interest between today and yesterday. Not really meant to be called live, this view is more of a place to stash a query and to call from a scheduled task.');