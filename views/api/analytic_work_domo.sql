DROP VIEW IF EXISTS api.analytic_work_domo;CREATE VIEW api.analytic_work_domo ASSELECT-- Key values and lookups    hsys.name_                                                                AS "HsysName",    facility.name_                                                            AS "FacilityName",    web_user.name_full                                                        AS "UserName",    inv.their_name                                                            AS "InvName",    work.num_items                                                            AS "NumItems",    work.num_inst                                                             AS "NumInst",    work.missing_inst                                                         AS "MissingInst",    work.points                                                               AS "Points",    coalesce (specialty.name_, 'Multi')                                       AS "Specialty",    CASE         WHEN item.item_type_id = 'e2278be4-0b60-294b-8764-2afda7cb7c6a'         THEN 'Pack' ELSE 'Tray'    END                                                                       AS "TrayOrPack",    work.num_packs                                                            AS "NumPacks",    work.num_trays                                                            AS "NumTrays",    item_type.name_                                                           AS "ItemType",    item.name_                                                                AS "ItemName",    work.activity                                                             AS "Activity",    inv_getdesc(work.inv_id)                                                  AS "Description",    work.duration                                                             AS "Duration",    work.date_time                                                            AS "DateTime",--  Start time and extracts    work.start_dts                                                            AS "Start_UTC",    work.start_local_dts                                                      AS "Start_Local",    start_local.date_actual                                                   AS "Start_Date",    start_local.date_actual                                                   AS "StartDate",    start_local.day_of_week_usa                                               AS "Start_DayOfWeek",    start_local.day_name_abbreviated                                          AS "Start_DayName",    start_local.week_of_year_fiscal_name                                      AS "Start_FiscalWeek",   --  Week 24 2020    start_local.week_of_year_fiscal                                           AS "Start_FiscalWeekNo", --  2020-24    start_local.month_actual                                                  AS "Start_MonthNo",    start_local.month_actual_name_abbreviated                                 AS "Start_MonthName",    start_local.month_fiscal                                                  AS "Start_FiscalMonthNo",    start_local.month_fiscal_name_abbreviated                                 AS "Start_FiscalMonthName",    to_char(start_local.year_actual, 'fm0000')                                AS "Start_Year",    start_local.year_actual                                                   AS "Start_YearNo",    start_local.fiscal_year_abbr                                              AS "Start_FiscalYear",    start_local.fiscal_year_abbr::int                                         AS "Start_FiscalYearNo",    date_part('hour', work.start_local_dts)::integer                          AS "Start_HourOfDay",    hour_bin_get_bin(date_part('hour', work.start_local_dts)::integer)        AS "Start_HourBin",    hour_bin_get_bin_label(date_part('hour', work.start_local_dts)::integer)  AS "Start_HourBinName",--  End time and extracts    work.end_dts                                                              AS "End_UTC",    work.end_local_dts                                                        AS "End_Local",    end_local.date_actual                                                     AS "End_Date",    end_local.date_actual                                                     AS "EndDate",          -- I added this in to match StartDate â€” DPA.    end_local.day_of_week_usa                                                 AS "End_DayOfWeek",    end_local.day_name_abbreviated                                            AS "End_DayName",    end_local.week_of_year_fiscal_name                                        AS "End_FiscalWeek",   --  Week 24 2020    end_local.week_of_year_fiscal                                             AS "End_FiscalWeekNo", --  2020-24    end_local.month_actual                                                    AS "End_MonthNo",    end_local.month_actual_name_abbreviated                                   AS "End_MonthName",    end_local.month_fiscal                                                    AS "End_FiscalMonthNo",    end_local.month_fiscal_name_abbreviated                                   AS "End_FiscalMonthName",    to_char(end_local.year_actual, 'fm0000')                                  AS "End_Year",    end_local.year_actual                                                     AS "End_YearNo",    end_local.fiscal_year_abbr                                                AS "End_FiscalYear",    end_local.fiscal_year_abbr::int                                           AS "End_FiscalYearNo",    date_part('hour', work.end_local_dts)::integer                            AS "End_HourOfDay",    hour_bin_get_bin(date_part('hour', work.end_local_dts)::integer)          AS "End_HourBin",    hour_bin_get_bin_label(date_part('hour', work.end_local_dts)::integer)    AS "End_HourBinName",--  Spare IDs for back-tracking questions about invididual rows.    work.activity_id,    work.assembly_id,    work.inv_id,    work.scan_id,    work.sterilizer_load_id,    work.sterilizer_loadInv_id,    work.key_supplement--  Get the data for the SELECT above    FROM analytic_work AS work    LEFT JOIN inv             ON inv.id          =  work.inv_id    LEFT JOIN item            ON inv.item_id     =  inv.item_id    LEFT JOIN item_type       ON item_type.id    =  item.item_type_id    LEFT JOIN specialty       ON specialty.id    =  item.specialty_id    LEFT JOIN hsys            ON hsys.id         =  work.hsys_id    LEFT JOIN facility        ON facility.id     =  work.facility_id    LEFT JOIN web_user        ON work.user_id    =  web_user.id    -- JOIN instead of LEFT JOIN to drop rows with invalid facility_id, invalid facility.calendar_id, or an epoch DTS.       JOIN calendar_day_plus start_local         ON (start_local.calendar_id = facility.calendar_id        AND start_local.date_actual = date(work.start_local_dts))    -- JOIN instead of LEFT JOIN to drop rows with invalid facility_id, invalid facility.calendar_id, or an epoch DTS.       JOIN calendar_day_plus end_local         ON (end_local.calendar_id = facility.calendar_id        AND end_local.date_actual = date(work.end_local_dts))   WHERE work.marked_for_deletion <> true  ;ALTER VIEW api.analytic_work_domo    OWNER TO user_change_structure;-------------------------------------------------- Register view------------------------------------------------CALL view_register ('api','analytic_work_domo','Analytic data from multiple Sonar data streams.','PROD Analytic Work PG');