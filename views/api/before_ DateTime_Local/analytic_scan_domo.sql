DROP VIEW IF EXISTS api.analytic_scan_domo;CREATE VIEW api.analytic_scan_domo ASWITH expanded_data AS (         SELECT            analytic_scan.scanned_type                  AS "ScannedType",            analytic_scan.associated_to                 AS "AssociatedTo",            analytic_scan.user_name                     AS "UserName",            analytic_scan.inv_name                      AS "InvName",            analytic_scan.location_description          AS "LocationDesc",            GREATEST(1, analytic_scan.num_inst)         AS "NumInst",            analytic_scan.tray_or_pack                  AS "TrayOrPack",            analytic_scan.scan_time_utc_dts             AS "ScanTime_UTC",            analytic_scan.item_name                     AS "ItemName",            analytic_scan.scan_time_local_dts           AS "ScanTime_Local",            COALESCE(hsys.name_, ''::citext)            AS "HsysName",            COALESCE(facility.name_, ''::citext)        AS "FacilityName",            COALESCE(specialty.name_, ''::citext)       AS "Specialty",            scan_date.date_actual                       AS "ScanTime_Date",            scan_date.day_of_week_usa                   AS "ScanTime_DayOfWeek",            scan_date.day_name_abbreviated              AS "ScanTime_DayName",            scan_date.week_of_year_fiscal_name          AS "ScanTime_FiscalWeek",   --  Week 24 2020            scan_date.week_of_year_fiscal               AS "ScanTime_FiscalWeekNo", --  2020-24            scan_date.month_actual                      AS "ScanTime_MonthNo",            scan_date.month_actual_name_abbreviated     AS "ScanTime_MonthName",            scan_date.month_fiscal                      AS "ScanTime_FiscalMonthNo",            scan_date.month_fiscal_name_abbreviated     AS "ScanTime_FiscalMonthName",            to_char(scan_date.year_actual, 'fm0000')    AS "ScanTime_Year",            scan_date.year_actual                       AS "ScanTime_YearNo",            scan_date.fiscal_year_abbr                  AS "ScanTime_FiscalYear",            scan_date.fiscal_year_abbr::int             AS "ScanTime_FiscalYearNo",            (date_part('hour'::text, analytic_scan.scan_time_local_dts))::integer                         AS "ScanTime_HourOfDay",            hour_bin_get_bin((date_part('hour'::text, analytic_scan.scan_time_local_dts))::integer)       AS "ScanTime_HourBin",            hour_bin_get_bin_label((date_part('hour'::text, analytic_scan.scan_time_local_dts))::integer) AS "ScanTime_HourBinName"           FROM analytic_scan           LEFT JOIN facility       ON analytic_scan.facility_id  = facility.id           LEFT JOIN hsys           ON facility.hsys_id           = hsys.id           LEFT JOIN specialty      ON analytic_scan.specialty_id = specialty.id           LEFT JOIN data_file_info ON analytic_scan.data_file_id = data_file_info.id       -- JOIN instead of LEFT JOIN to drop rows with invalid facility_id, invalid facility.calendar_id, or an epoch DTS.          JOIN calendar_day_plus scan_date                   ON (scan_date.calendar_id = facility.calendar_id                 AND scan_date.date_actual = date(analytic_scan.scan_time_local_dts))) SELECT expanded_data."ScannedType",        expanded_data."AssociatedTo",        expanded_data."UserName",        expanded_data."InvName",        expanded_data."LocationDesc",        expanded_data."NumInst",        expanded_data."TrayOrPack",        expanded_data."ItemName",        expanded_data."ScanTime_UTC",        expanded_data."ScanTime_Local",        expanded_data."HsysName",        expanded_data."FacilityName",        expanded_data."Specialty",        expanded_data."ScanTime_Date",        expanded_data."ScanTime_DayOfWeek",        expanded_data."ScanTime_DayName",        expanded_data."ScanTime_FiscalWeek",        expanded_data."ScanTime_FiscalWeekNo",        expanded_data."ScanTime_HourOfDay",        expanded_data."ScanTime_HourBin",        expanded_data."ScanTime_HourBinName",        ntile(100) OVER (ORDER BY expanded_data."NumInst") AS "NumInstPercentile"   FROM expanded_data;ALTER VIEW api.analytic_scan_domo	OWNER TO user_change_structure;-------------------------------------------------- Register view------------------------------------------------CALL view_register ('api','analytic_scan_domo','Analytic data, dervied largely from [Scan].','PROD Analytic Scan PG');