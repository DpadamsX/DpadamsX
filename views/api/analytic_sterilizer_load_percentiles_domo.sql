CREATE OR REPLACE VIEW api.analytic_sterilizer_load_percentiles_domo AS/*First, set up a CTE for each numeric column we want percentiles from.For each, you get a distinct list of values with-- the value-- the frequency (count) of that value in the whole table-- the percentile of that value in the whole table-- the percentile of that frequency in the whole table.Each CTE should contain a small number of rows since it's based on SELECT DISTINCT.These temporary views then become something we can lookup (join) on in the mainbody of the query. That point of all of this is to generate the stats once,and then be able to efficiently bolt the results onto each source row.Percentiles aren't easy/efficient to calculate this way in Domo, andpercentiles make for *much* more illuminating charts, on some of our data.*/WITHinstruments_count_stats AS (  SELECT DISTINCT instruments_count AS value,  		  ntile(100) over (order by instruments_count) AS value_percentile,		  count(*) AS frequency_count,		  ntile(100) over (order by count(instruments_count)) AS frequency_percentile    FROM analytic_sterilizer_loadGROUP BY instruments_count),-- Get the details for the points column.trays_count_stats AS (  SELECT DISTINCT trays_count AS value,  		  ntile(100) over (order by trays_count) AS value_percentile,		  count(*) AS frequency_count,		  ntile(100) over (order by count(trays_count)) AS frequency_percentile    FROM analytic_sterilizer_loadGROUP BY trays_count),-- Get the details for the points column.packs_count_stats AS (  SELECT DISTINCT packs_count AS value,  		  ntile(100) over (order by packs_count) AS value_percentile,		  count(*) AS frequency_count,		  ntile(100) over (order by count(packs_count)) AS frequency_percentile    FROM analytic_sterilizer_loadGROUP BY packs_count)-- Get every row in the base table and use the CTEs above for lookups (joins) with the extra data.SELECT    hsys.name_ AS "HsysName",    facility.name_ AS "FacilityName",    analytic_sterilizer_load.trays_count AS "NumTrays",    analytic_sterilizer_load.packs_count AS "NumPacks",    analytic_sterilizer_load.instruments_count AS "NumInst",    -- Bolt on the calculated stats FROM the CTEs at the top.    trays_count_stats.frequency_count AS "NumTraysFrequency",    trays_count_stats.value_percentile AS "NumTraysValuePercentile",    trays_count_stats.frequency_percentile AS "NumTraysFrequencyPercentile",    packs_count_stats.frequency_count AS "NumPacksFrequency",    packs_count_stats.value_percentile AS "NumPacksValuePercentile",    packs_count_stats.frequency_percentile AS "NumPacksFrequencyPercentile",	instruments_count_stats.frequency_count AS "NumInstFrequency",    instruments_count_stats.value_percentile AS "NumInstValuePercentile",    instruments_count_stats.frequency_percentile AS "NumInstFrequencyPercentile"	FROM analytic_sterilizer_load	JOIN facility ON (analytic_sterilizer_load.facility_id = facility.id)	JOIN hsys ON (facility.hsys_id = hsys.id)	JOIN trays_count_stats ON (analytic_sterilizer_load.trays_count = trays_count_stats.value)	JOIN packs_count_stats ON (analytic_sterilizer_load.packs_count = packs_count_stats.value)	JOIN instruments_count_stats ON (analytic_sterilizer_load.instruments_count = instruments_count_stats.value)    WHERE analytic_sterilizer_load.marked_for_deletion = false  ;ALTER VIEW api.analytic_sterilizer_load_percentiles_domo    OWNER TO user_change_structure;-------------------------------------------------- Register view------------------------------------------------CALL view_register ('api','analytic_sterilizer_load_percentiles_domo','[SterilizerLoad] details, with percentiles calculated for instruments, trays, and packs.','PROD Analytic Sterilizer Load Percentiles PG');