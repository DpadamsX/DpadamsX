SELECT table_name,       count(records_count) as pushes, -- count(*) returns 1, even if the result should be 0.       coalesce(sum(records_count),0) as records_pushed-- Very cool. The array below is a list of names we're searching on, UNNEST turns it into a set of rows in memory.-- Since it's a set of rows, we can JOIN against it. So, the LEFT JOIN acts like a For each loop, but only takes the one line.       FROM unnest(ARRAY[		'analytic_productivity',		'analytic_scan',		'analytic_sterilizer_load',		'analytic_sterilizer_loadinv',		'assembly_prods',		'assembly',		'data_file_info',		'deletion_log',		'domo_dataset',		'domo_passthrough',		'facility_location',		'facility',		'hsys',		'inv',		'item_type',		'item',		'need',		'outlier_change',		'outlier_rule',		'push_log',		'record_changes_log_detail',		'record_changes_log',		'row_compare',		'specialty',		'stat_facility',		'sterilize_method',		'sterilize_params',		'sterilizer_load',		'sterilizer_log',		'sterilizer',		'web_user' 	 	]) table_name  LEFT JOIN push_log on push_log.ib_table_name = table_name  GROUP BY table_name ORDER BY table_name