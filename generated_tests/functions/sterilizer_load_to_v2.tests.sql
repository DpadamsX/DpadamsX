------------------------------------------------------------------------------------- Checks for types_plus.sterilizer_load_to_v2 (sterilizer_load_in sterilizer_load) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'types_plus', 'sterilizer_load_to_v2 (sterilizer_load_in sterilizer_load)', '()', 'types_plus.sterilizer_load_to_v2 sterilizer_load_in sterilizer_load existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''sterilizer_load_to_v2''   and pg_get_function_identity_arguments(oid) = ''sterilizer_load_in sterilizer_load'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'types_plus', 'sterilizer_load_to_v2 (sterilizer_load_in sterilizer_load)', '()', 'types_plus.sterilizer_load_to_v2 sterilizer_load_in sterilizer_load definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''sterilizer_load_to_v2''   and pg_get_function_identity_arguments(oid) = ''sterilizer_load_in sterilizer_load'';', 'CREATE OR REPLACE FUNCTION types_plus.sterilizer_load_to_v2(sterilizer_load_in sterilizer_load) RETURNS sterilizer_load_v2 LANGUAGE sqlAS $function$        SELECT			sterilizer_load_in.id,			sterilizer_load_in.data_file_id,			sterilizer_load_in.marked_for_deletion,			sterilizer_load_in.sterilize_method_id,			sterilizer_load_in.sterilizer_id,			sterilizer_load_in.sterilize_params_id,			sterilizer_load_in.created_dts,			sterilizer_load_in.load_no,			sterilizer_load_in.status_building_dts,			sterilizer_load_in.status_sterilizing_dts,			sterilizer_load_in.status_cooling_dts,			sterilizer_load_in.status_done_dts,			sterilizer_load_in.notes,			sterilizer_load_in.failed_notes,			sterilizer_load_in.utcoffset_seconds$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');