------------------------------------------------------------------------------------- Checks for types_plus.loaner_to_v1 (loaner_in loaner) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'types_plus', 'loaner_to_v1 (loaner_in loaner)', '()', 'types_plus.loaner_to_v1 loaner_in loaner existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''loaner_to_v1''   and pg_get_function_identity_arguments(oid) = ''loaner_in loaner'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'types_plus', 'loaner_to_v1 (loaner_in loaner)', '()', 'types_plus.loaner_to_v1 loaner_in loaner definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''loaner_to_v1''   and pg_get_function_identity_arguments(oid) = ''loaner_in loaner'';', 'CREATE OR REPLACE FUNCTION types_plus.loaner_to_v1(loaner_in loaner) RETURNS loaner_v1 LANGUAGE sqlAS $function$                   SELECT			loaner_in.s_case_id,			loaner_in.id,			loaner_in.sup_id,			loaner_in.rep_id,			loaner_in.facility_id,			loaner_in.last_updated_by_data_file_id,			loaner_in.pickup_dts,			loaner_in.created_dts,			loaner_in.updated_dts,			loaner_in.datetime_local,			loaner_in.drop_off_dts,			loaner_in.num_items,			loaner_in.marked_for_deletion,			loaner_in.is_printed,			loaner_in.created_by,			loaner_in.updated_by,			loaner_in.status,			loaner_in.notes               $function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');