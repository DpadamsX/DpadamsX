------------------------------------------------------------------------------------- Checks for types_plus.facility_to_v1 (facility_in facility) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'types_plus', 'facility_to_v1 (facility_in facility)', '()', 'types_plus.facility_to_v1 facility_in facility existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''facility_to_v1''   and pg_get_function_identity_arguments(oid) = ''facility_in facility'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'types_plus', 'facility_to_v1 (facility_in facility)', '()', 'types_plus.facility_to_v1 facility_in facility definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''facility_to_v1''   and pg_get_function_identity_arguments(oid) = ''facility_in facility'';', 'CREATE OR REPLACE FUNCTION types_plus.facility_to_v1(facility_in facility) RETURNS facility_v1 LANGUAGE sqlAS $function$        SELECT			facility_in.id,			facility_in.marked_for_deletion,			facility_in.hsys_id,			facility_in.name_,			facility_in.tz_name$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');