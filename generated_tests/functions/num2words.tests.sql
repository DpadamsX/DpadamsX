------------------------------------------------------------------------------------- Checks for tools.num2words (number_as_text_in text) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'tools', 'num2words (number_as_text_in text)', '()', 'tools.num2words number_as_text_in text existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''num2words''   and pg_get_function_identity_arguments(oid) = ''number_as_text_in text'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'tools', 'num2words (number_as_text_in text)', '()', 'tools.num2words number_as_text_in text definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''num2words''   and pg_get_function_identity_arguments(oid) = ''number_as_text_in text'';', 'CREATE OR REPLACE FUNCTION tools.num2words(number_as_text_in text) RETURNS text LANGUAGE plpgsqlAS $function$DECLARE  words_out text;  number_as_money money; -- cash_words(money)...the deprecated type.BEGIN   number_as_money = number_as_text_in::money;   words_out = cash_words(number_as_money); -- cash_words(money), not cash_words(some kind of numeric or text)-- select cash_words(''24,120.10''); -- Twenty four thousand one hundred twenty dollars and ten cents   words_out = replace(words_out, '' dollars'','''');   words_out = replace(words_out, '' dollar'','''');   words_out = replace(words_out, '' cents'','''');   words_out = replace(words_out, '' cent'','''');   words_out = replace(words_out, '' and '','' point '');   RETURN words_out;END$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');