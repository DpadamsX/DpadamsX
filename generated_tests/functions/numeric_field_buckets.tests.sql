------------------------------------------------------------------------------------- Checks for dba.numeric_field_buckets (table_name_in text, field_name text, bucket_count integer) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'dba', 'numeric_field_buckets (table_name_in text, field_name text, bucket_count integer)', '()', 'dba.numeric_field_buckets table_name_in text, field_name text, bucket_count integer existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''numeric_field_buckets''   and pg_get_function_identity_arguments(oid) = ''table_name_in text, field_name text, bucket_count integer'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'dba', 'numeric_field_buckets (table_name_in text, field_name text, bucket_count integer)', '()', 'dba.numeric_field_buckets table_name_in text, field_name text, bucket_count integer definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''numeric_field_buckets''   and pg_get_function_identity_arguments(oid) = ''table_name_in text, field_name text, bucket_count integer'';', 'CREATE OR REPLACE FUNCTION dba.numeric_field_buckets(table_name_in text, field_name text, bucket_count integer) RETURNS TABLE(table_name text, column_name text, bucket integer, min integer, max integer, count bigint, bar text) LANGUAGE plpgsqlAS $function$  BEGIN    RETURN QUERY EXECUTE    ''with 	range_stats as	(select min('' || quote_ident(field_name) || ''),			max('' || quote_ident(field_name) || '')			 		   from '' || quote_ident(table_name_in) || ''),			histogram as	(select  ''|| quote_literal(table_name_in) || '' as table_name,         	 ''|| quote_literal(field_name)    || '' as column_name,			  width_bucket(num_inst, range_stats.min, range_stats.max, $3 - 1) as bucket,         	  min('' || quote_ident(field_name) || ''),         	  max('' || quote_ident(field_name) || ''),			  count(*) as frequency		    from '' || quote_ident(table_name_in) || '',			 range_stats	group by bucket    	order by bucket)		 select table_name,			column_name,			bucket,			min,			max,			frequency,			repeat (''|| quote_literal(''‚ñá'') || '',				   (frequency::float					 / max(frequency) over() * ($3 - 1) * 2)::int			) as bar	   from histogram''	    USING table_name, field_name, bucket_count;	END;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');