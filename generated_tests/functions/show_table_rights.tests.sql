------------------------------------------------------------------------------------- Checks for dba.show_table_rights (t_name text) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'dba', 'show_table_rights (t_name text)', '()', 'dba.show_table_rights t_name text existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''show_table_rights''   and pg_get_function_identity_arguments(oid) = ''t_name text'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'dba', 'show_table_rights (t_name text)', '()', 'dba.show_table_rights t_name text definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''show_table_rights''   and pg_get_function_identity_arguments(oid) = ''t_name text'';', 'CREATE OR REPLACE FUNCTION dba.show_table_rights(t_name text) RETURNS TABLE("Table_Name" name, "User_Name" name, "SELECT" text, "INSERT" text, "UPDATE" text, "DELETE" text, "TRUNCATE" text, "REFERENCES" text, "TRIGGER" text) LANGUAGE sql STABLEAS $function$	SELECT 				t.tablename,        u.usename,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, ''.'', t.tablename), ''select'') = TRUE then ''X'' ELSE '' '' END AS select,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, ''.'', t.tablename), ''insert'')= TRUE then ''X'' ELSE '' '' END AS insert,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, ''.'', t.tablename), ''update'') = TRUE then ''X'' ELSE '' '' END AS update,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, ''.'', t.tablename), ''delete'') = TRUE then ''X'' ELSE '' '' END AS delete,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, ''.'', t.tablename), ''truncate'') = TRUE then ''X'' ELSE '' '' END AS truncate,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, ''.'', t.tablename), ''references'') = TRUE then ''X'' ELSE '' '' END AS references,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, ''.'', t.tablename), ''trigger'') = TRUE then ''X'' ELSE '' '' END AS trigger					FROM    pg_tables t,         					pg_user u                 	WHERE	  t.tablename = t_name		ORDER BY u.usename;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');