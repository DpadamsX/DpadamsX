------------------------------------------------------------------------------------- Checks for api.pg_stat_statements () function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'api', 'pg_stat_statements ()', '()', 'api.pg_stat_statements  existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''api''   and proname = ''pg_stat_statements''   and pg_get_function_identity_arguments(oid) = '''';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'api', 'pg_stat_statements ()', '()', 'api.pg_stat_statements  definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''api''   and proname = ''pg_stat_statements''   and pg_get_function_identity_arguments(oid) = '''';', 'CREATE OR REPLACE FUNCTION api.pg_stat_statements() RETURNS SETOF pg_stat_statements LANGUAGE sql SECURITY DEFINERAS $function$SELECT * FROM pg_stat_statements;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');