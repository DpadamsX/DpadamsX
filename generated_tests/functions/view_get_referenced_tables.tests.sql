------------------------------------------------------------------------------------- Checks for dba.view_get_referenced_tables (view_name_in text) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'dba', 'view_get_referenced_tables (view_name_in text)', '()', 'dba.view_get_referenced_tables view_name_in text existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''view_get_referenced_tables''   and pg_get_function_identity_arguments(oid) = ''view_name_in text'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'dba', 'view_get_referenced_tables (view_name_in text)', '()', 'dba.view_get_referenced_tables view_name_in text definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''view_get_referenced_tables''   and pg_get_function_identity_arguments(oid) = ''view_name_in text'';', 'CREATE OR REPLACE FUNCTION dba.view_get_referenced_tables(view_name_in text) RETURNS TABLE(referenced_table text) LANGUAGE sql STABLEAS $function$  SELECT u.table_schema || ''.'' || u.table_name as referenced_table    FROM information_schema.view_table_usage u    JOIN information_schema.views v         ON  u.view_schema = v.table_schema         AND u.view_name = v.table_name   WHERE u.view_name = view_name_in::regclass::nameORDER BY u.view_schema,         u.view_name;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');