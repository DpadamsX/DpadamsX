------------------------------------------------------------------------------------- Checks for dba.numeric_field_stats (table_name_in text, field_name text) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'dba', 'numeric_field_stats (table_name_in text, field_name text)', '()', 'dba.numeric_field_stats table_name_in text, field_name text existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''numeric_field_stats''   and pg_get_function_identity_arguments(oid) = ''table_name_in text, field_name text'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'dba', 'numeric_field_stats (table_name_in text, field_name text)', '()', 'dba.numeric_field_stats table_name_in text, field_name text definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''numeric_field_stats''   and pg_get_function_identity_arguments(oid) = ''table_name_in text, field_name text'';', 'CREATE OR REPLACE FUNCTION dba.numeric_field_stats(table_name_in text, field_name text) RETURNS TABLE(table_name text, column_name text, min integer, max integer, avg real, variance real, stddev real, stddev_1_above real, stddev_1_below real, stddev_2_above real, stddev_2_below real, stddev_3_above real, stddev_3_below real, stddev_4_above real, stddev_4_below real, stddev_5_above real, stddev_5_below real, q1 real, q2 real, q3 real, p95 real, p99 real, iqr real) LANGUAGE plpgsqlAS $function$  BEGIN    RETURN QUERY EXECUTE         ''with 	 stats as	 (select  coalesce(min( '' || quote_ident(field_name) || ''),0)::int4 as min,			  coalesce(max( '' || quote_ident(field_name) || ''),0)::int4 as max,			  coalesce(avg( '' || quote_ident(field_name) || ''),0)::float4 as avg,			  			  coalesce(variance('' || quote_ident(field_name) || ''),0)::float4 as variance,			  coalesce(stddev('' || quote_ident(field_name) || ''),0)::float4 as stddev,			  			  coalesce(percentile_cont(0.25) within group (order by '' || quote_ident(field_name) || '' asc),0)::float4 as q1,			  coalesce(percentile_cont(0.50) within group (order by '' || quote_ident(field_name) || '' asc),0)::float4 as q2,			  coalesce(percentile_cont(0.75) within group (order by '' || quote_ident(field_name) || '' asc),0)::float4 as q3,			  coalesce(percentile_cont(0.95) within group (order by '' || quote_ident(field_name) || '' asc),0)::float4 as p95,			  coalesce(percentile_cont(0.99) within group (order by '' || quote_ident(field_name) || '' asc),0)::float4 as p99	   from '' || quote_ident(table_name_in) || '')   	 select '' || quote_literal(table_name_in) || '' as table_name,         	'' || quote_literal(field_name) || '' as column_name,             min,             max,             avg,             variance,             stddev,             avg + (stddev * 1)::float4 as stddev_1_above,             avg - (stddev * 1)::float4 as stddev_1_below,             avg + (stddev * 2)::float4 as stddev_2_above,             avg - (stddev * 2)::float4 as stddev_2_below,             avg + (stddev * 3)::float4 as stddev_3_above,             avg - (stddev * 3)::float4 as stddev_3_below,             avg + (stddev * 4)::float4 as stddev_4_above,             avg - (stddev * 4)::float4 as stddev_4_below,             avg + (stddev * 5)::float4 as stddev_5_above,             avg - (stddev * 5)::float4 as stddev_5_below,                          q1,             q2,             q3,             p95,             p99, 			(q3 - q1)::float4 as iqr				from stats''	    USING table_name, field_name;	END;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');