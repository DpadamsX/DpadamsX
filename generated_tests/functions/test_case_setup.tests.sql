------------------------------------------------------------------------------------- Checks for dba.test_case_setup (object_class_in citext, object_schema_in citext, object_name_in citext, function_signature_in citext, test_name_in citext, test_code_in text, expected_response_in citext, expected_error_in citext, response_type_in citext, comparison_options_in jsonb, expected_outcome_in test_outcome, run_as_in user_name[], modifies_data_in boolean, rds_only_in boolean, setup_code_in citext, teardown_code_in citext) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'dba', 'test_case_setup (object_class_in citext, object_schema_in citext, object_name_in citext, function_signature_in citext, test_name_in citext, test_code_in text, expected_response_in citext, expected_error_in citext, response_type_in citext, comparison_options_in jsonb, expected_outcome_in test_outcome, run_as_in user_name[], modifies_data_in boolean, rds_only_in boolean, setup_code_in citext, teardown_code_in citext)', '()', 'dba.test_case_setup object_class_in citext, object_schema_in citext, object_name_in citext, function_signature_in citext, test_name_in citext, test_code_in text, expected_response_in citext, expected_error_in citext, response_type_in citext, comparison_options_in jsonb, expected_outcome_in test_outcome, run_as_in user_name[], modifies_data_in boolean, rds_only_in boolean, setup_code_in citext, teardown_code_in citext existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''test_case_setup''   and pg_get_function_identity_arguments(oid) = ''object_class_in citext, object_schema_in citext, object_name_in citext, function_signature_in citext, test_name_in citext, test_code_in text, expected_response_in citext, expected_error_in citext, response_type_in citext, comparison_options_in jsonb, expected_outcome_in test_outcome, run_as_in user_name[], modifies_data_in boolean, rds_only_in boolean, setup_code_in citext, teardown_code_in citext'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'dba', 'test_case_setup (object_class_in citext, object_schema_in citext, object_name_in citext, function_signature_in citext, test_name_in citext, test_code_in text, expected_response_in citext, expected_error_in citext, response_type_in citext, comparison_options_in jsonb, expected_outcome_in test_outcome, run_as_in user_name[], modifies_data_in boolean, rds_only_in boolean, setup_code_in citext, teardown_code_in citext)', '()', 'dba.test_case_setup object_class_in citext, object_schema_in citext, object_name_in citext, function_signature_in citext, test_name_in citext, test_code_in text, expected_response_in citext, expected_error_in citext, response_type_in citext, comparison_options_in jsonb, expected_outcome_in test_outcome, run_as_in user_name[], modifies_data_in boolean, rds_only_in boolean, setup_code_in citext, teardown_code_in citext definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''test_case_setup''   and pg_get_function_identity_arguments(oid) = ''object_class_in citext, object_schema_in citext, object_name_in citext, function_signature_in citext, test_name_in citext, test_code_in text, expected_response_in citext, expected_error_in citext, response_type_in citext, comparison_options_in jsonb, expected_outcome_in test_outcome, run_as_in user_name[], modifies_data_in boolean, rds_only_in boolean, setup_code_in citext, teardown_code_in citext'';', 'CREATE OR REPLACE FUNCTION dba.test_case_setup(object_class_in citext, object_schema_in citext, object_name_in citext, function_signature_in citext, test_name_in citext, test_code_in text, expected_response_in citext, expected_error_in citext, response_type_in citext, comparison_options_in jsonb, expected_outcome_in test_outcome, run_as_in user_name[], modifies_data_in boolean DEFAULT true, rds_only_in boolean DEFAULT false, setup_code_in citext DEFAULT ''''::citext, teardown_code_in citext DEFAULT ''''::citext) RETURNS test_case LANGUAGE sqlAS $function$INSERT INTO test_case (               object_class,               object_schema,               object_name,               function_signature,               test_name,               test_code,               expected_response,               expected_error,               response_type,               comparison_options,               expected_outcome,               run_as,               modifies_data,               rds_only,               setup_code,               teardown_code)       VALUES (               object_class_in,               object_schema_in,               object_name_in,               function_signature_in,               test_name_in,               test_code_in,               expected_response_in,               expected_error_in,               response_type_in,               comparison_options_in,               expected_outcome_in,               run_as_in,               modifies_data_in,               rds_only_in,               setup_code_in,               teardown_code_in)-- Using a synthetic uuid id field, but there''s also a uniqueness check on-- object_class,object_schema,object_name,function_signature,test_name		ON CONFLICT ON CONSTRAINT test_case_unique_signature			DO UPDATE SET			   test_code               = test_code_in,			   expected_response       = expected_response_in,			   expected_error          = expected_error_in,			   response_type           = response_type_in,			   comparison_options      = comparison_options_in,			   expected_outcome        = expected_outcome_in,			   run_as                  = run_as_in,			   modifies_data           = modifies_data_in,			   rds_only                = rds_only_in,			   setup_code              = setup_code_in,			   teardown_code           = teardown_code_in       RETURNING *;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');