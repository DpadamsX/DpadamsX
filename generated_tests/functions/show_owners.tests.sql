------------------------------------------------------------------------------------- Checks for dba.show_owners () function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'dba', 'show_owners ()', '()', 'dba.show_owners  existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''show_owners''   and pg_get_function_identity_arguments(oid) = '''';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'dba', 'show_owners ()', '()', 'dba.show_owners  definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''show_owners''   and pg_get_function_identity_arguments(oid) = '''';', 'CREATE OR REPLACE FUNCTION dba.show_owners() RETURNS TABLE(schema_name name, object_name name, owner_name name, object_type text) LANGUAGE sql STABLEAS $function$SELECT 	   nsp.nspname AS object_schema,       cls.relname AS object_name,        rol.rolname AS owner_name,        case cls.relkind         WHEN ''r'' THEN ''TABLE''         WHEN ''v'' THEN ''VIEW''         WHEN ''m'' THEN ''MATERIALIZED_VIEW''         WHEN ''i'' THEN ''INDEX''         WHEN ''S'' THEN ''SEQUENCE''         WHEN ''c'' THEN ''TYPE''         ELSE cls.relkind::text       END AS object_typeFROM pg_class cls  JOIN pg_roles rol ON rol.oid = cls.relowner  JOIN pg_namespace nsp ON nsp.oid = cls.relnamespaceWHERE nsp.nspname NOT IN (''information_schema'', ''pg_catalog'') AND			nsp.nspname NOT LIKE ''pg_toast%''ORDER BY  nsp.nspname, cls.relname;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');