------------------------------------------------------------------------------------- Checks for types_plus.item_arch_to_v1 (item_arch_in item_arch) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'types_plus', 'item_arch_to_v1 (item_arch_in item_arch)', '()', 'types_plus.item_arch_to_v1 item_arch_in item_arch existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''item_arch_to_v1''   and pg_get_function_identity_arguments(oid) = ''item_arch_in item_arch'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'types_plus', 'item_arch_to_v1 (item_arch_in item_arch)', '()', 'types_plus.item_arch_to_v1 item_arch_in item_arch definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''item_arch_to_v1''   and pg_get_function_identity_arguments(oid) = ''item_arch_in item_arch'';', 'CREATE OR REPLACE FUNCTION types_plus.item_arch_to_v1(item_arch_in item_arch) RETURNS item_arch_v1 LANGUAGE sqlAS $function$                   SELECT			item_arch_in.id,			item_arch_in.facility_id,			item_arch_in.clinic_id,			item_arch_in.created_dts,			item_arch_in.updated_dts,			item_arch_in.previous_as_of,			item_arch_in.marked_for_deletion,			item_arch_in.is_current,			item_arch_in.name_,			item_arch_in.type_,			item_arch_in.created_by,			item_arch_in.updated_by               $function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');