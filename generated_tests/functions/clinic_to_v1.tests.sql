------------------------------------------------------------------------------------- Checks for types_plus.clinic_to_v1 (clinic_in clinic) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'types_plus', 'clinic_to_v1 (clinic_in clinic)', '()', 'types_plus.clinic_to_v1 clinic_in clinic existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''clinic_to_v1''   and pg_get_function_identity_arguments(oid) = ''clinic_in clinic'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'types_plus', 'clinic_to_v1 (clinic_in clinic)', '()', 'types_plus.clinic_to_v1 clinic_in clinic definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''clinic_to_v1''   and pg_get_function_identity_arguments(oid) = ''clinic_in clinic'';', 'CREATE OR REPLACE FUNCTION types_plus.clinic_to_v1(clinic_in clinic) RETURNS clinic_v1 LANGUAGE sqlAS $function$                   SELECT			clinic_in.id,			clinic_in.hsys_id,			clinic_in.created_dts,			clinic_in.updated_dts,			clinic_in.marked_for_deletion,			clinic_in.receive_at_clinic,			clinic_in.name_,			clinic_in.created_by,			clinic_in.updated_by               $function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');