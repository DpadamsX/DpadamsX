------------------------------------------------------------------------------------- Checks for types_plus.sup_to_v2 (sup_in sup) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'types_plus', 'sup_to_v2 (sup_in sup)', '()', 'types_plus.sup_to_v2 sup_in sup existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''sup_to_v2''   and pg_get_function_identity_arguments(oid) = ''sup_in sup'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'types_plus', 'sup_to_v2 (sup_in sup)', '()', 'types_plus.sup_to_v2 sup_in sup definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''sup_to_v2''   and pg_get_function_identity_arguments(oid) = ''sup_in sup'';', 'CREATE OR REPLACE FUNCTION types_plus.sup_to_v2(sup_in sup) RETURNS sup_v2 LANGUAGE sqlAS $function$                   SELECT			sup_in.id,			sup_in.custom_facility_id,			sup_in.sup_parent_id,			sup_in.created_dts,			sup_in.updated_dts,			sup_in.is_custom_by_facility,			sup_in.marked_for_deletion,			sup_in.is_available_for_loaners,			sup_in.name_,			sup_in.created_by,			sup_in.updated_by,			sup_in.short_name               $function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');