------------------------------------------------------------------------------------- Checks for event_triggers.on_ddl_create_or_alter () function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'event_triggers', 'on_ddl_create_or_alter ()', '()', 'event_triggers.on_ddl_create_or_alter  existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''event_triggers''   and proname = ''on_ddl_create_or_alter''   and pg_get_function_identity_arguments(oid) = '''';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'event_triggers', 'on_ddl_create_or_alter ()', '()', 'event_triggers.on_ddl_create_or_alter  definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''event_triggers''   and proname = ''on_ddl_create_or_alter''   and pg_get_function_identity_arguments(oid) = '''';', 'CREATE OR REPLACE FUNCTION event_triggers.on_ddl_create_or_alter() RETURNS event_trigger LANGUAGE plpgsqlAS $function$BEGININSERT INTO dba.ddl_event_log (			classid,			objid,			objsubid,			command_tag,			in_extension,			object_identity,			object_type,			schema_name,			trigger_event) --,			-- object_source)	SELECT	ec.classid,			ec.objid,			ec.objsubid,			ec.command_tag,			ec.in_extension,			ec.object_identity,			ec.object_type,			ec.schema_name,			TG_EVENT			-- ddl_get_object_source(ec.object_type,ec.objid)       FROM pg_event_trigger_ddl_commands() AS ec  LEFT JOIN pg_proc on pg_proc.oid = ec.objid      WHERE TG_TAG IS NOT NULL AND            command_tag NOT IN (''GRANT'',''REVOKE'',''ALTER DEFAULT PRIVILEGES'');      -- Unclear why some are null, seems to be on low-level rewrites?  ¬Ø\_(„ÉÑ)_/¬ØEND$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');