------------------------------------------------------------------------------------- Checks for tools.format_uuid (id uuid) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'tools', 'format_uuid (id uuid)', '()', 'tools.format_uuid id uuid existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''format_uuid''   and pg_get_function_identity_arguments(oid) = ''id uuid'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'tools', 'format_uuid (id uuid)', '()', 'tools.format_uuid id uuid definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''format_uuid''   and pg_get_function_identity_arguments(oid) = ''id uuid'';', 'CREATE OR REPLACE FUNCTION tools.format_uuid(id uuid) RETURNS text LANGUAGE sqlAS $function$SELECT UPPER(REPLACE(id::text,''-'', ''''));$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');