------------------------------------------------------------------------------------- Checks for tools.connection_snapshot () function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'tools', 'connection_snapshot ()', '()', 'tools.connection_snapshot  existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''connection_snapshot''   and pg_get_function_identity_arguments(oid) = '''';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'tools', 'connection_snapshot ()', '()', 'tools.connection_snapshot  definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''connection_snapshot''   and pg_get_function_identity_arguments(oid) = '''';', 'CREATE OR REPLACE FUNCTION tools.connection_snapshot() RETURNS TABLE(user_name text, session_user_name text, role_nane text, database_name text, server_version text, search_path text, inet_client_addr inet, inet_client_port integer, inet_server_addr inet, inet_server_port integer, query text) LANGUAGE plpgsqlAS $function$ BEGIN	 user_name := current_user;	 session_user_name := session_user;	 role_nane := current_role;	 database_name := current_database();	 server_version := version();	 	 SELECT setting FROM pg_settings WHERE name=''search_path'' INTO search_path;	 inet_client_addr := inet_client_addr();	 inet_client_port := inet_client_port();	 inet_server_addr := inet_server_addr();	 inet_server_port := inet_server_port();		 query := current_query();		 RETURN NEXT;END$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');