------------------------------------------------------------------------------------- Checks for ascendco.calendar_get_fiscal_week (date_in date, first_date_of_fiscal_year_in date) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'ascendco', 'calendar_get_fiscal_week (date_in date, first_date_of_fiscal_year_in date)', '()', 'ascendco.calendar_get_fiscal_week date_in date, first_date_of_fiscal_year_in date existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''ascendco''   and proname = ''calendar_get_fiscal_week''   and pg_get_function_identity_arguments(oid) = ''date_in date, first_date_of_fiscal_year_in date'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'ascendco', 'calendar_get_fiscal_week (date_in date, first_date_of_fiscal_year_in date)', '()', 'ascendco.calendar_get_fiscal_week date_in date, first_date_of_fiscal_year_in date definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''ascendco''   and proname = ''calendar_get_fiscal_week''   and pg_get_function_identity_arguments(oid) = ''date_in date, first_date_of_fiscal_year_in date'';', 'CREATE OR REPLACE FUNCTION ascendco.calendar_get_fiscal_week(date_in date, first_date_of_fiscal_year_in date) RETURNS integer LANGUAGE sqlAS $function$SELECT ((date_in - first_date_of_fiscal_year_in) / 7 ) +1$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');