------------------------------------------------------------------------------------- Checks for tools.relkind_name (relkind text, OUT relkind_name text) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'tools', 'relkind_name (relkind text, OUT relkind_name text)', '()', 'tools.relkind_name relkind text, OUT relkind_name text existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''relkind_name''   and pg_get_function_identity_arguments(oid) = ''relkind text, OUT relkind_name text'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'tools', 'relkind_name (relkind text, OUT relkind_name text)', '()', 'tools.relkind_name relkind text, OUT relkind_name text definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''relkind_name''   and pg_get_function_identity_arguments(oid) = ''relkind text, OUT relkind_name text'';', 'CREATE OR REPLACE FUNCTION tools.relkind_name(relkind text, OUT relkind_name text) RETURNS text LANGUAGE sqlAS $function$SELECT CASE  WHEN relkind = ''r'' THEN ''table''  WHEN relkind = ''i'' THEN ''index''  WHEN relkind = ''S'' THEN ''sequence''  WHEN relkind = ''t'' THEN ''TOAST table''  WHEN relkind = ''v'' THEN ''view''  WHEN relkind = ''m'' THEN ''materialized view''  WHEN relkind = ''c'' THEN ''composite type''  WHEN relkind = ''f'' THEN ''foreign table''  WHEN relkind = ''p'' THEN ''partitioned table''  WHEN relkind = ''I'' THEN ''partitioned index''  ELSE ''Unexpected relkind '' || relkindEND;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');