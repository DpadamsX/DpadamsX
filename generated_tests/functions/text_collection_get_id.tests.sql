------------------------------------------------------------------------------------- Checks for tools.text_collection_get_id (name_in citext) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'tools', 'text_collection_get_id (name_in citext)', '()', 'tools.text_collection_get_id name_in citext existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''text_collection_get_id''   and pg_get_function_identity_arguments(oid) = ''name_in citext'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'tools', 'text_collection_get_id (name_in citext)', '()', 'tools.text_collection_get_id name_in citext definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''text_collection_get_id''   and pg_get_function_identity_arguments(oid) = ''name_in citext'';', 'CREATE OR REPLACE FUNCTION tools.text_collection_get_id(name_in citext) RETURNS uuid LANGUAGE sqlAS $function$SELECT coalesce(id, ''00000000-0000-0000-0000-000000000000'') AS id  FROM text_collection WHERE collection_name = name_in;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');