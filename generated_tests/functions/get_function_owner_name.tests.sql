------------------------------------------------------------------------------------- Checks for tools.get_function_owner_name (function_oid oid) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'tools', 'get_function_owner_name (function_oid oid)', '()', 'tools.get_function_owner_name function_oid oid existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''get_function_owner_name''   and pg_get_function_identity_arguments(oid) = ''function_oid oid'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'tools', 'get_function_owner_name (function_oid oid)', '()', 'tools.get_function_owner_name function_oid oid definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''get_function_owner_name''   and pg_get_function_identity_arguments(oid) = ''function_oid oid'';', 'CREATE OR REPLACE FUNCTION tools.get_function_owner_name(function_oid oid) RETURNS text LANGUAGE sqlAS $function$SELECT rolname::text   FROM pg_authid WHERE oid = (	 	SELECT pg_proc.proowner	 	  FROM pg_proc	 	 WHERE oid = function_oid	 	 )$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');