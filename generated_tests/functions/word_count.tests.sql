------------------------------------------------------------------------------------- Checks for tools.word_count (text_in citext) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'tools', 'word_count (text_in citext)', '()', 'tools.word_count text_in citext existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''word_count''   and pg_get_function_identity_arguments(oid) = ''text_in citext'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'tools', 'word_count (text_in citext)', '()', 'tools.word_count text_in citext definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''word_count''   and pg_get_function_identity_arguments(oid) = ''text_in citext'';', 'CREATE OR REPLACE FUNCTION tools.word_count(text_in citext) RETURNS integer LANGUAGE plpgsqlAS $function$DECLARE  text_in_words_array   text[];  word_count            int4;BEGINselect into text_in_words_array	string_to_array(text_in, '' '');word_count := array_length(text_in_words_array, 1);RETURN word_count;END$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');