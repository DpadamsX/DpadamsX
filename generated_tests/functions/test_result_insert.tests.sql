------------------------------------------------------------------------------------- Checks for dba.test_result_insert (test_case_id_in uuid, test_passed_in boolean, actual_outcome_in test_outcome, user_name_in user_name, patch_log_id_in uuid, actual_response_in citext, actual_error_in citext, diagnostics_in citext, summary_in citext, results_json_in jsonb) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'dba', 'test_result_insert (test_case_id_in uuid, test_passed_in boolean, actual_outcome_in test_outcome, user_name_in user_name, patch_log_id_in uuid, actual_response_in citext, actual_error_in citext, diagnostics_in citext, summary_in citext, results_json_in jsonb)', '()', 'dba.test_result_insert test_case_id_in uuid, test_passed_in boolean, actual_outcome_in test_outcome, user_name_in user_name, patch_log_id_in uuid, actual_response_in citext, actual_error_in citext, diagnostics_in citext, summary_in citext, results_json_in jsonb existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''test_result_insert''   and pg_get_function_identity_arguments(oid) = ''test_case_id_in uuid, test_passed_in boolean, actual_outcome_in test_outcome, user_name_in user_name, patch_log_id_in uuid, actual_response_in citext, actual_error_in citext, diagnostics_in citext, summary_in citext, results_json_in jsonb'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'dba', 'test_result_insert (test_case_id_in uuid, test_passed_in boolean, actual_outcome_in test_outcome, user_name_in user_name, patch_log_id_in uuid, actual_response_in citext, actual_error_in citext, diagnostics_in citext, summary_in citext, results_json_in jsonb)', '()', 'dba.test_result_insert test_case_id_in uuid, test_passed_in boolean, actual_outcome_in test_outcome, user_name_in user_name, patch_log_id_in uuid, actual_response_in citext, actual_error_in citext, diagnostics_in citext, summary_in citext, results_json_in jsonb definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''test_result_insert''   and pg_get_function_identity_arguments(oid) = ''test_case_id_in uuid, test_passed_in boolean, actual_outcome_in test_outcome, user_name_in user_name, patch_log_id_in uuid, actual_response_in citext, actual_error_in citext, diagnostics_in citext, summary_in citext, results_json_in jsonb'';', 'CREATE OR REPLACE FUNCTION dba.test_result_insert(test_case_id_in uuid, test_passed_in boolean, actual_outcome_in test_outcome, user_name_in user_name, patch_log_id_in uuid DEFAULT NULL::uuid, actual_response_in citext DEFAULT ''''::citext, actual_error_in citext DEFAULT ''''::citext, diagnostics_in citext DEFAULT ''''::citext, summary_in citext DEFAULT ''''::citext, results_json_in jsonb DEFAULT ''{}''::jsonb) RETURNS test_result LANGUAGE sqlAS $function$INSERT INTO test_result (	           test_case_id,	           actual_outcome,	           test_passed,	           patch_log_id,	           actual_response,	           actual_error,	           summary,	           diagnostics,	           results_json,	           user_name)       VALUES (test_case_id_in,	           actual_outcome_in,	           test_passed_in,	           patch_log_id_in,	           actual_response_in,	           actual_error_in,	           summary_in,	           diagnostics_in,	           results_json_in,	           user_name_in::user_name) -- user_name is a custom domain.		ON CONFLICT ON CONSTRAINT test_result_case_and_user_unique			DO UPDATE SET			   actual_outcome  = actual_outcome_in,               test_passed     = test_passed_in,               patch_log_id    = patch_log_id_in,               actual_response = actual_response_in,               actual_error    = actual_error_in,               summary         = summary_in,               diagnostics     = diagnostics_in,               results_json    = results_json_in,               user_name       = user_name_in::user_name -- user_name is a custom domain       RETURNING *$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');