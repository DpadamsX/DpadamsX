------------------------------------------------------------------------------------- Checks for ascendco.find_rare_and_large (table_name text, field_name text, frequency_threshold integer, value_threshold integer, target_server text) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'ascendco', 'find_rare_and_large (table_name text, field_name text, frequency_threshold integer, value_threshold integer, target_server text)', '()', 'ascendco.find_rare_and_large table_name text, field_name text, frequency_threshold integer, value_threshold integer, target_server text existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''ascendco''   and proname = ''find_rare_and_large''   and pg_get_function_identity_arguments(oid) = ''table_name text, field_name text, frequency_threshold integer, value_threshold integer, target_server text'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'ascendco', 'find_rare_and_large (table_name text, field_name text, frequency_threshold integer, value_threshold integer, target_server text)', '()', 'ascendco.find_rare_and_large table_name text, field_name text, frequency_threshold integer, value_threshold integer, target_server text definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''ascendco''   and proname = ''find_rare_and_large''   and pg_get_function_identity_arguments(oid) = ''table_name text, field_name text, frequency_threshold integer, value_threshold integer, target_server text'';', 'CREATE OR REPLACE FUNCTION ascendco.find_rare_and_large(table_name text, field_name text, frequency_threshold integer, value_threshold integer, target_server text DEFAULT ''All''::text) RETURNS TABLE(value_ integer, frequency integer, frequency_percentile integer, value_percentile integer) LANGUAGE plpgsqlAS $function$BEGINIF (target_server = ''All'') THEN    RETURN QUERY EXECUTE ''	with frequency_counts as (	  select '' || quote_ident(field_name) || ''::INT as value_,	   	      count(*) as frequency	    from '' || quote_ident(table_name) || ''	   where '' || quote_ident(field_name) || '' > 0	group by 1	order by 2),	frequency_percentiles as (	  select *,	         ntile(100) over (order by frequency asc) as frequency_percentile,	         ntile(100) over (order by value_ asc) as value_percentile	   from frequency_counts)	select value_,	       frequency::INT,	       frequency_percentile,	       value_percentile	  from frequency_percentiles	   where frequency_percentile < $3 and	         value_ >	         (select value_	          from frequency_counts	          where value_percentile > $4	          limit 1)	order by 1,2,3''	using  table_name, field_name, frequency_threshold, value_threshold;ELSE    RETURN QUERY EXECUTE ''	with frequency_counts as (	  select '' || quote_ident(field_name) || ''::INT as value_,	   	      count(*) as frequency	    from '' || quote_ident(table_name) || '' 	inner join data_file_info on (data_file_info.id = '' || quote_ident(table_name) || ''.data_file_id)	   where '' || quote_ident(field_name) || '' > 0 and	         data_file_info.server_name_ = $5	group by 1	order by 2),	frequency_percentiles as (	  select *,	         ntile(100) over (order by frequency asc) as frequency_percentile,	         ntile(100) over (order by value_ asc) as value_percentile	   from frequency_counts)	select value_,	       frequency::INT,	       frequency_percentile,	       value_percentile	  from frequency_percentiles	   where frequency_percentile < $3 and	         value_ >	         (select value_	          from frequency_counts	          where value_percentile >$4	          limit 1)	order by 1,2,3''	using  table_name, field_name, frequency_threshold, value_threshold, target_server;END IF;END;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');