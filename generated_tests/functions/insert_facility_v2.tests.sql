------------------------------------------------------------------------------------- Checks for types_plus.insert_facility_v2 (data_in facility_v2[]) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'types_plus', 'insert_facility_v2 (data_in facility_v2[])', '()', 'types_plus.insert_facility_v2 data_in facility_v2[] existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''insert_facility_v2''   and pg_get_function_identity_arguments(oid) = ''data_in facility_v2[]'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'types_plus', 'insert_facility_v2 (data_in facility_v2[])', '()', 'types_plus.insert_facility_v2 data_in facility_v2[] definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''insert_facility_v2''   and pg_get_function_identity_arguments(oid) = ''data_in facility_v2[]'';', 'CREATE OR REPLACE FUNCTION types_plus.insert_facility_v2(data_in facility_v2[]) RETURNS integer LANGUAGE sqlAS $function$ -- The CTE below is a roundabout way of returning an insertion count from a pure SQL function in Postgres.with inserted_rows as (        INSERT INTO facility (			id,			hsys_id,			production_label_form_id,			permanent_label_form_id,			missing_inst_label_form_id,			facility_location_label_form_id,			sterilizer_label_form_id,			user_badge_label_form_id,			workstation_label_form_id,			default_spd_facility_id,			created_dts,			updated_dts,			sonar_auto_logout_minutes,			sonar_auto_logout_dialog_minutes,			num_ors,			sonar_go_live_date,			marked_for_deletion,			is_count_sheet_source_truth,			hide_doc_names_for_stats,			is_item_master_live,			is_sonar_live,			sterilizer_print_at_sterilizing,			sterilizer_print_at_cooling,			sterilizer_print_at_released,			can_set_all_found_in_assembly,			name_,			their_id,			created_by,			updated_by,			reporting_name,			label_name,			tz_name,			sonar_name_full,			sonar_count_sheet_form_name,			sterilize_alert_level,			sonar_scanner_stop_char,			emr_location_name,			sonar_features,			interfaces,			needs_scheduling,			analytics_prefs)                  SELECT			rows_in.id,			rows_in.hsys_id,			rows_in.production_label_form_id,			rows_in.permanent_label_form_id,			rows_in.missing_inst_label_form_id,			rows_in.facility_location_label_form_id,			rows_in.sterilizer_label_form_id,			rows_in.user_badge_label_form_id,			rows_in.workstation_label_form_id,			rows_in.default_spd_facility_id,			rows_in.created_dts,			rows_in.updated_dts,			rows_in.sonar_auto_logout_minutes,			rows_in.sonar_auto_logout_dialog_minutes,			rows_in.num_ors,			rows_in.sonar_go_live_date,			rows_in.marked_for_deletion,			rows_in.is_count_sheet_source_truth,			rows_in.hide_doc_names_for_stats,			rows_in.is_item_master_live,			rows_in.is_sonar_live,			rows_in.sterilizer_print_at_sterilizing,			rows_in.sterilizer_print_at_cooling,			rows_in.sterilizer_print_at_released,			rows_in.can_set_all_found_in_assembly,			rows_in.name_,			rows_in.their_id,			rows_in.created_by,			rows_in.updated_by,			rows_in.reporting_name,			rows_in.label_name,			rows_in.tz_name,			rows_in.sonar_name_full,			rows_in.sonar_count_sheet_form_name,			rows_in.sterilize_alert_level,			rows_in.sonar_scanner_stop_char,			rows_in.emr_location_name,			rows_in.sonar_features,			rows_in.interfaces,			rows_in.needs_scheduling,			rows_in.analytics_prefs                      FROM unnest(data_in) as rows_in                  ON CONFLICT(id) DO UPDATE SET			hsys_id = EXCLUDED.hsys_id,			production_label_form_id = EXCLUDED.production_label_form_id,			permanent_label_form_id = EXCLUDED.permanent_label_form_id,			missing_inst_label_form_id = EXCLUDED.missing_inst_label_form_id,			facility_location_label_form_id = EXCLUDED.facility_location_label_form_id,			sterilizer_label_form_id = EXCLUDED.sterilizer_label_form_id,			user_badge_label_form_id = EXCLUDED.user_badge_label_form_id,			workstation_label_form_id = EXCLUDED.workstation_label_form_id,			default_spd_facility_id = EXCLUDED.default_spd_facility_id,			created_dts = EXCLUDED.created_dts,			updated_dts = EXCLUDED.updated_dts,			sonar_auto_logout_minutes = EXCLUDED.sonar_auto_logout_minutes,			sonar_auto_logout_dialog_minutes = EXCLUDED.sonar_auto_logout_dialog_minutes,			num_ors = EXCLUDED.num_ors,			sonar_go_live_date = EXCLUDED.sonar_go_live_date,			marked_for_deletion = EXCLUDED.marked_for_deletion,			is_count_sheet_source_truth = EXCLUDED.is_count_sheet_source_truth,			hide_doc_names_for_stats = EXCLUDED.hide_doc_names_for_stats,			is_item_master_live = EXCLUDED.is_item_master_live,			is_sonar_live = EXCLUDED.is_sonar_live,			sterilizer_print_at_sterilizing = EXCLUDED.sterilizer_print_at_sterilizing,			sterilizer_print_at_cooling = EXCLUDED.sterilizer_print_at_cooling,			sterilizer_print_at_released = EXCLUDED.sterilizer_print_at_released,			can_set_all_found_in_assembly = EXCLUDED.can_set_all_found_in_assembly,			name_ = EXCLUDED.name_,			their_id = EXCLUDED.their_id,			created_by = EXCLUDED.created_by,			updated_by = EXCLUDED.updated_by,			reporting_name = EXCLUDED.reporting_name,			label_name = EXCLUDED.label_name,			tz_name = EXCLUDED.tz_name,			sonar_name_full = EXCLUDED.sonar_name_full,			sonar_count_sheet_form_name = EXCLUDED.sonar_count_sheet_form_name,			sterilize_alert_level = EXCLUDED.sterilize_alert_level,			sonar_scanner_stop_char = EXCLUDED.sonar_scanner_stop_char,			emr_location_name = EXCLUDED.emr_location_name,			sonar_features = EXCLUDED.sonar_features,			interfaces = EXCLUDED.interfaces,			needs_scheduling = EXCLUDED.needs_scheduling,			analytics_prefs = EXCLUDED.analytics_prefs          returning 1 as row_counter)         select sum(row_counter)::integer from inserted_rows; $function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');