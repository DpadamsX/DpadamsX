------------------------------------------------------------------------------------- Checks for tools.count_rows (schema text, tablename text) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'tools', 'count_rows (schema text, tablename text)', '()', 'tools.count_rows schema text, tablename text existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''count_rows''   and pg_get_function_identity_arguments(oid) = ''schema text, tablename text'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'tools', 'count_rows (schema text, tablename text)', '()', 'tools.count_rows schema text, tablename text definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''count_rows''   and pg_get_function_identity_arguments(oid) = ''schema text, tablename text'';', 'CREATE OR REPLACE FUNCTION tools.count_rows(schema text, tablename text) RETURNS integer LANGUAGE plpgsqlAS $function$DECLAREresult integer;query varchar;BEGINquery := ''SELECT count(1) FROM '' || schema || ''.'' || tablename;execute query into result;return result;END;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');