------------------------------------------------------------------------------------- Checks for dba.check_if_patch_has_been_run_before (patch_name_in text) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'dba', 'check_if_patch_has_been_run_before (patch_name_in text)', '()', 'dba.check_if_patch_has_been_run_before patch_name_in text existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''check_if_patch_has_been_run_before''   and pg_get_function_identity_arguments(oid) = ''patch_name_in text'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'dba', 'check_if_patch_has_been_run_before (patch_name_in text)', '()', 'dba.check_if_patch_has_been_run_before patch_name_in text definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''check_if_patch_has_been_run_before''   and pg_get_function_identity_arguments(oid) = ''patch_name_in text'';', 'CREATE OR REPLACE FUNCTION dba.check_if_patch_has_been_run_before(patch_name_in text) RETURNS boolean LANGUAGE plpgsqlAS $function$DECLARE  row_count int8;BEGINSELECT count(*) INTO row_count  FROM patch_log WHERE patch_name = patch_name_in;IF (row_count = 0) THEN  RETURN false;ELSE  RAISE EXCEPTION USING	 message = ''Patch has been run before'',	 hint = ''Patches should be run in order, and may not be reapplied.'',	 errcode = ''KC001''; -- Custom code for ''Patch has been run before.''END IF;END;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');