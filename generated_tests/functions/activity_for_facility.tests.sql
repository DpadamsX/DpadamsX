------------------------------------------------------------------------------------- Checks for ascendco.activity_for_facility (in_facility_id uuid) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'ascendco', 'activity_for_facility (in_facility_id uuid)', '()', 'ascendco.activity_for_facility in_facility_id uuid existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''ascendco''   and proname = ''activity_for_facility''   and pg_get_function_identity_arguments(oid) = ''in_facility_id uuid'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'ascendco', 'activity_for_facility (in_facility_id uuid)', '()', 'ascendco.activity_for_facility in_facility_id uuid definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''ascendco''   and proname = ''activity_for_facility''   and pg_get_function_identity_arguments(oid) = ''in_facility_id uuid'';', 'CREATE OR REPLACE FUNCTION ascendco.activity_for_facility(in_facility_id uuid) RETURNS TABLE(activity_id uuid, hsys_name citext, facility_id uuid, facility_name citext, activity_name citext, server_name citext, start_dts timestamp without time zone, done_dts timestamp without time zone, duration_seconds integer, updated_dts timestamp without time zone, marked_for_deletion boolean, other_desc citext, user_name citext, created_dts timestamp without time zone, created_by citext, updated_by citext) LANGUAGE sql STABLEAS $function$SELECT activity.id                                             AS activity_id,       coalesce(hsys.name_, ''Unknown'')                         AS hsys_name,       facility.id,       coalesce(facility.name_, ''Unknown'')                     AS facility_name,       coalesce(facility_activities.name_, ''Unknown'')          AS activity_name,       coalesce(data_file_info.server_name_, ''Unknown'')        AS server_name,       activity.start_dts,       activity.done_dts,       activity.duration_seconds,       activity.updated_dts,       activity.marked_for_deletion,       activity.other_desc,       coalesce(web_user.name_full, ''Unknown'')                 AS user_name,       activity.created_dts,       activity.created_by,       activity.updated_by--   Note: activity doesn''t have hsys_id, you neeed to load facility, and get the hsys_id from there.     FROM activityLEFT JOIN facility_activities  ON facility_activities.id   = activity.facility_activities_idLEFT JOIN web_user             ON web_user.id              =  activity.web_user_idLEFT JOIN data_file_info       ON data_file_info.id        =  activity.last_updated_by_data_file_idLEFT JOIN facility             ON facility.id              =  activity.facility_idLEFT JOIN hsys                 ON hsys.id                  =  facility.hsys_idWHERE activity.facility_id = in_facility_id;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');