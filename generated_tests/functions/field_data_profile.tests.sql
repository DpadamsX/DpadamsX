------------------------------------------------------------------------------------- Checks for dba.field_data_profile (table_name text, field_name text) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'dba', 'field_data_profile (table_name text, field_name text)', '()', 'dba.field_data_profile table_name text, field_name text existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''field_data_profile''   and pg_get_function_identity_arguments(oid) = ''table_name text, field_name text'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'dba', 'field_data_profile (table_name text, field_name text)', '()', 'dba.field_data_profile table_name text, field_name text definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''field_data_profile''   and pg_get_function_identity_arguments(oid) = ''table_name text, field_name text'';', 'CREATE OR REPLACE FUNCTION dba.field_data_profile(table_name text, field_name text) RETURNS TABLE(distinct_value citext, page_correlation real, field_cardinality bigint, rows_count bigint, value_frequency bigint, selectivity numeric, proportion_chart text) LANGUAGE plpgsqlAS $function$BEGINRETURN QUERY EXECUTE ''with table_estimate as (select correlation  from pg_stats   where tablename = '''''' || table_name || '''''' and         attname   = '''''' || field_name || ''''''),          distinct_values as  (select distinct '' || quote_ident(field_name) || ''::citext as distinct_value,         count(*) as frequency     from '' || quote_ident(table_name) || '' group by '' || quote_ident(field_name) || ''),  row_figures as  (select count(*) as rows_count     from '' || quote_ident(table_name) || '') select  distinct_values.distinct_value,        table_estimate.correlation as page_correlation,        (select count(*) as field_cardinality from distinct_values),		 row_figures.rows_count,		 distinct_values.frequency as value_frequency,          round((distinct_values.frequency::decimal / row_figures.rows_count::decimal),3) as value_selectivity,        repeat('' || quote_literal(''‚ñÄ'') || '', ((distinct_values.frequency::decimal / row_figures.rows_count::decimal)*100)::int) as proportion_chart           from distinct_values,        table_estimate,        row_figures        ''    	using  table_name, field_name;END;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');