------------------------------------------------------------------------------------- Checks for types_plus.insert_domo_dataset_v1 (data_in domo_dataset_v1[]) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'types_plus', 'insert_domo_dataset_v1 (data_in domo_dataset_v1[])', '()', 'types_plus.insert_domo_dataset_v1 data_in domo_dataset_v1[] existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''insert_domo_dataset_v1''   and pg_get_function_identity_arguments(oid) = ''data_in domo_dataset_v1[]'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'types_plus', 'insert_domo_dataset_v1 (data_in domo_dataset_v1[])', '()', 'types_plus.insert_domo_dataset_v1 data_in domo_dataset_v1[] definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''insert_domo_dataset_v1''   and pg_get_function_identity_arguments(oid) = ''data_in domo_dataset_v1[]'';', 'CREATE OR REPLACE FUNCTION types_plus.insert_domo_dataset_v1(data_in domo_dataset_v1[]) RETURNS integer LANGUAGE sqlAS $function$ -- The CTE below is a roundabout way of returning an insertion count from a pure SQL function in Postgres.with inserted_rows as (        INSERT INTO domo_dataset (			id,			dataset_name,			rows_count,			columns_count,			created_at_dts,			updated_at_dts)                  SELECT			rows_in.id,			rows_in.dataset_name,			rows_in.rows_count,			rows_in.columns_count,			rows_in.created_at_dts,			rows_in.updated_at_dts                      FROM unnest(data_in) as rows_in                  ON CONFLICT(id) DO UPDATE SET			dataset_name = EXCLUDED.dataset_name,			rows_count = EXCLUDED.rows_count,			columns_count = EXCLUDED.columns_count,			created_at_dts = EXCLUDED.created_at_dts,			updated_at_dts = EXCLUDED.updated_at_dts          returning 1 as row_counter)         select sum(row_counter)::integer from inserted_rows; $function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');