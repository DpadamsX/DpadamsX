------------------------------------------------------------------------------------- Checks for ascendco.calendar_get_fiscal_month (date_in date, first_date_of_fiscal_year_in date) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'ascendco', 'calendar_get_fiscal_month (date_in date, first_date_of_fiscal_year_in date)', '()', 'ascendco.calendar_get_fiscal_month date_in date, first_date_of_fiscal_year_in date existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''ascendco''   and proname = ''calendar_get_fiscal_month''   and pg_get_function_identity_arguments(oid) = ''date_in date, first_date_of_fiscal_year_in date'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'ascendco', 'calendar_get_fiscal_month (date_in date, first_date_of_fiscal_year_in date)', '()', 'ascendco.calendar_get_fiscal_month date_in date, first_date_of_fiscal_year_in date definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''ascendco''   and proname = ''calendar_get_fiscal_month''   and pg_get_function_identity_arguments(oid) = ''date_in date, first_date_of_fiscal_year_in date'';', 'CREATE OR REPLACE FUNCTION ascendco.calendar_get_fiscal_month(date_in date, first_date_of_fiscal_year_in date) RETURNS integer LANGUAGE plpgsqlAS $function$DECLARE    fiscal_week integer  := calendar_get_fiscal_week (date_in, first_date_of_fiscal_year_in);    fiscal_month integer := 0;BEGINSELECTCASE WHEN fiscal_week <  5 THEN  1	 WHEN fiscal_week <  9 THEN  2	 WHEN fiscal_week < 14 THEN  3	 WHEN fiscal_week < 18 THEN  4	 WHEN fiscal_week < 22 THEN  5	 WHEN fiscal_week < 27 THEN  6	 WHEN fiscal_week < 32 THEN  7	 WHEN fiscal_week < 35 THEN  8	 WHEN fiscal_week < 40 THEN  9	 WHEN fiscal_week < 44 THEN 10	 WHEN fiscal_week < 48 THEN 11	 ELSE                       12END INTO fiscal_month;RETURN fiscal_month;END;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');