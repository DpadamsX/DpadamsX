------------------------------------------------------------------------------------- Checks for types_plus.item_type_to_v1 (item_type_in item_type) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'types_plus', 'item_type_to_v1 (item_type_in item_type)', '()', 'types_plus.item_type_to_v1 item_type_in item_type existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''item_type_to_v1''   and pg_get_function_identity_arguments(oid) = ''item_type_in item_type'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'types_plus', 'item_type_to_v1 (item_type_in item_type)', '()', 'types_plus.item_type_to_v1 item_type_in item_type definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''item_type_to_v1''   and pg_get_function_identity_arguments(oid) = ''item_type_in item_type'';', 'CREATE OR REPLACE FUNCTION types_plus.item_type_to_v1(item_type_in item_type) RETURNS item_type_v1 LANGUAGE sqlAS $function$        SELECT			item_type_in.id,			item_type_in.marked_for_deletion,			item_type_in.name_$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');