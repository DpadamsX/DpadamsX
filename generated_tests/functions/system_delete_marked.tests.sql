------------------------------------------------------------------------------------- Checks for ascendco.system_delete_marked () function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'ascendco', 'system_delete_marked ()', '()', 'ascendco.system_delete_marked  existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''ascendco''   and proname = ''system_delete_marked''   and pg_get_function_identity_arguments(oid) = '''';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'ascendco', 'system_delete_marked ()', '()', 'ascendco.system_delete_marked  definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''ascendco''   and proname = ''system_delete_marked''   and pg_get_function_identity_arguments(oid) = '''';', 'CREATE OR REPLACE FUNCTION ascendco.system_delete_marked() RETURNS TABLE(schema text, table_name text, count integer) LANGUAGE plpgsqlAS $function$BEGINRETURN QUERY   select ''ascendco'',''analytic_productivity'', deleted_count from table_delete_marked(''ascendco.analytic_productivity'') union all   select ''ascendco'',''analytic_sterilizer_load'', deleted_count from table_delete_marked(''ascendco.analytic_sterilizer_load'') union all   select ''ascendco'',''analytic_sterilizer_loadinv'', deleted_count from table_delete_marked(''ascendco.analytic_sterilizer_loadinv'') union all   select ''ascendco'',''item_type'', deleted_count from table_delete_marked(''ascendco.item_type'') union all   select ''ascendco'',''specialty'', deleted_count from table_delete_marked(''ascendco.specialty'') union all   select ''ascendco'',''sterilize_method'', deleted_count from table_delete_marked(''ascendco.sterilize_method'');END;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');