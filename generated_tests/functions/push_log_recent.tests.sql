------------------------------------------------------------------------------------- Checks for dba.push_log_recent (table_name_in citext, limit_in integer) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'dba', 'push_log_recent (table_name_in citext, limit_in integer)', '()', 'dba.push_log_recent table_name_in citext, limit_in integer existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''push_log_recent''   and pg_get_function_identity_arguments(oid) = ''table_name_in citext, limit_in integer'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'dba', 'push_log_recent (table_name_in citext, limit_in integer)', '()', 'dba.push_log_recent table_name_in citext, limit_in integer definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''dba''   and proname = ''push_log_recent''   and pg_get_function_identity_arguments(oid) = ''table_name_in citext, limit_in integer'';', 'CREATE OR REPLACE FUNCTION dba.push_log_recent(table_name_in citext, limit_in integer DEFAULT 20) RETURNS TABLE(table_name citext, minutes_old integer, records_count integer, server_name citext, push_log_id citext) LANGUAGE plpgsql STABLEAS $function$BEGINRETURN QUERY   select push_log.ib_table_name,          minutes_old (push_log.push_dts) as minutes_old,          push_log.records_count,          coalesce(data_file_info.server_name_, ''Unknown server with ID '' || format_uuid(push_log.data_file_id))::citext AS server_name,          format_uuid (push_log.id)::citext AS push_log_id     from push_logleft join data_file_info on data_file_info.id = push_log.data_file_id    where ib_table_name = table_name_in  order by push_dts desc   limit limit_in;END$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');