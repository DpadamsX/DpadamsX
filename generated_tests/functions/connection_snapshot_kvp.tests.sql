------------------------------------------------------------------------------------- Checks for tools.connection_snapshot_kvp () function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'tools', 'connection_snapshot_kvp ()', '()', 'tools.connection_snapshot_kvp  existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''connection_snapshot_kvp''   and pg_get_function_identity_arguments(oid) = '''';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'tools', 'connection_snapshot_kvp ()', '()', 'tools.connection_snapshot_kvp  definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''tools''   and proname = ''connection_snapshot_kvp''   and pg_get_function_identity_arguments(oid) = '''';', 'CREATE OR REPLACE FUNCTION tools.connection_snapshot_kvp() RETURNS TABLE(setting_name text, setting_value text) LANGUAGE plpgsqlAS $function$DECLARE	search_path text;	BEGIN	 	 SELECT setting FROM pg_settings WHERE name=''search_path'' INTO search_path;	 SELECT ''user_name'',current_user INTO setting_name,setting_value;				RETURN NEXT;	 SELECT ''session_user_name'',session_user INTO setting_name,setting_value;		RETURN NEXT;	 SELECT ''role_nane'',current_role INTO setting_name,setting_value;				RETURN NEXT;	 SELECT ''database_name'',current_database() INTO setting_name,setting_value;		RETURN NEXT;	 SELECT ''server_version'',version() INTO setting_name,setting_value;				RETURN NEXT;	 SELECT ''search_path'',search_path INTO setting_name,setting_value;				RETURN NEXT;	 SELECT ''inet_client_addr'',inet_client_addr() INTO setting_name,setting_value;	RETURN NEXT;	 SELECT ''inet_client_port'',inet_client_port() INTO setting_name,setting_value;	RETURN NEXT;	 SELECT ''inet_server_addr'',inet_server_addr() INTO setting_name,setting_value;	RETURN NEXT;	 SELECT ''inet_server_port'',inet_server_port() INTO setting_name,setting_value;	RETURN NEXT;	 SELECT ''query'',current_query() INTO setting_name,setting_value;				RETURN NEXT;END$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');