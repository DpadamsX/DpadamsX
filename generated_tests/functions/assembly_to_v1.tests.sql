------------------------------------------------------------------------------------- Checks for types_plus.assembly_to_v1 (assembly_in assembly) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'types_plus', 'assembly_to_v1 (assembly_in assembly)', '()', 'types_plus.assembly_to_v1 assembly_in assembly existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''assembly_to_v1''   and pg_get_function_identity_arguments(oid) = ''assembly_in assembly'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'types_plus', 'assembly_to_v1 (assembly_in assembly)', '()', 'types_plus.assembly_to_v1 assembly_in assembly definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''assembly_to_v1''   and pg_get_function_identity_arguments(oid) = ''assembly_in assembly'';', 'CREATE OR REPLACE FUNCTION types_plus.assembly_to_v1(assembly_in assembly) RETURNS assembly_v1 LANGUAGE sqlAS $function$        SELECT			assembly_in.id,			assembly_in.data_file_id,			assembly_in.marked_for_deletion,			assembly_in.created_by_user_id,			assembly_in.done_by_user_id,			assembly_in.facility_location_id,			assembly_in.inv_id,			assembly_in.last_updated_by_data_file_id,			assembly_in.updated_by_user_id,			assembly_in.is_complete,			assembly_in.is_quick_turn,			assembly_in.con_id,			assembly_in.created_by,			assembly_in.difficulty,			assembly_in.quantity,			assembly_in.sequence_no,			assembly_in.num_inst,			assembly_in.points,			assembly_in.done_dts,			assembly_in.created_dts,			assembly_in.updated_dts,			assembly_in.missing_list,			assembly_in.priority,			assembly_in.status,			assembly_in.updated_by$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');