------------------------------------------------------------------------------------- Checks for types_plus.sup_parent_to_v1 (sup_parent_in sup_parent) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'types_plus', 'sup_parent_to_v1 (sup_parent_in sup_parent)', '()', 'types_plus.sup_parent_to_v1 sup_parent_in sup_parent existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''sup_parent_to_v1''   and pg_get_function_identity_arguments(oid) = ''sup_parent_in sup_parent'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'types_plus', 'sup_parent_to_v1 (sup_parent_in sup_parent)', '()', 'types_plus.sup_parent_to_v1 sup_parent_in sup_parent definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''sup_parent_to_v1''   and pg_get_function_identity_arguments(oid) = ''sup_parent_in sup_parent'';', 'CREATE OR REPLACE FUNCTION types_plus.sup_parent_to_v1(sup_parent_in sup_parent) RETURNS sup_parent_v1 LANGUAGE sqlAS $function$                   SELECT			sup_parent_in.id,			sup_parent_in.created_dts,			sup_parent_in.updated_dts,			sup_parent_in.marked_for_deletion,			sup_parent_in.name_,			sup_parent_in.created_by,			sup_parent_in.updated_by               $function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');