------------------------------------------------------------------------------------- Checks for types_plus.insert_domo_passthrough_v1 (data_in domo_passthrough_v1[]) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'types_plus', 'insert_domo_passthrough_v1 (data_in domo_passthrough_v1[])', '()', 'types_plus.insert_domo_passthrough_v1 data_in domo_passthrough_v1[] existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''insert_domo_passthrough_v1''   and pg_get_function_identity_arguments(oid) = ''data_in domo_passthrough_v1[]'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'types_plus', 'insert_domo_passthrough_v1 (data_in domo_passthrough_v1[])', '()', 'types_plus.insert_domo_passthrough_v1 data_in domo_passthrough_v1[] definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''insert_domo_passthrough_v1''   and pg_get_function_identity_arguments(oid) = ''data_in domo_passthrough_v1[]'';', 'CREATE OR REPLACE FUNCTION types_plus.insert_domo_passthrough_v1(data_in domo_passthrough_v1[]) RETURNS integer LANGUAGE sqlAS $function$-- The CTE below is a roundabout way of returning an insertion count from a pure SQL function in Postgres.-- 2020-04-05: Updated constraint clause to to match unqiue index name in v2 of table.with inserted_rows as (        INSERT INTO domo_passthrough (			source_id,			hsys_id,			facility_id,			view_version,			dataset_name,			data)        SELECT			rows_in.source_id,			rows_in.hsys_id,			rows_in.facility_id,			rows_in.view_version,			rows_in.dataset_name,			rows_in.data        FROM unnest(data_in) as rows_in        ON CONFLICT ON CONSTRAINT domo_passthrough_key_unique DO UPDATE SET			hsys_id         = EXCLUDED.hsys_id,			facility_id     = EXCLUDED.facility_id,			view_version    = EXCLUDED.view_version,			data            = EXCLUDED.data        returning 1 as row_counter)    select sum(row_counter)::integer from inserted_rows;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');