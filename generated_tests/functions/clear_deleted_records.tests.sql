------------------------------------------------------------------------------------- Checks for ascendco.clear_deleted_records () function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'ascendco', 'clear_deleted_records ()', '()', 'ascendco.clear_deleted_records  existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''ascendco''   and proname = ''clear_deleted_records''   and pg_get_function_identity_arguments(oid) = '''';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'ascendco', 'clear_deleted_records ()', '()', 'ascendco.clear_deleted_records  definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''ascendco''   and proname = ''clear_deleted_records''   and pg_get_function_identity_arguments(oid) = '''';', 'CREATE OR REPLACE FUNCTION ascendco.clear_deleted_records() RETURNS SETOF void LANGUAGE plpgsqlAS $function$BEGIN     DELETE FROM ascendco.analytic_productivity WHERE marked_for_deletion = true;     ANALYZE  ascendco.analytic_productivity;     DELETE FROM ascendco.analytic_sterilizer_load WHERE marked_for_deletion = true;     ANALYZE  ascendco.analytic_sterilizer_load;     DELETE FROM ascendco.analytic_sterilizer_loadinv WHERE marked_for_deletion = true;     ANALYZE  ascendco.analytic_sterilizer_loadinv;     DELETE FROM ascendco.item_type WHERE marked_for_deletion = true;     ANALYZE  ascendco.item_type;     DELETE FROM ascendco.specialty WHERE marked_for_deletion = true;     ANALYZE  ascendco.specialty;     DELETE FROM ascendco.sterilize_method WHERE marked_for_deletion = true;     ANALYZE  ascendco.sterilize_method;END;$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');