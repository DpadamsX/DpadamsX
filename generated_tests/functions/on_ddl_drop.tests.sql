------------------------------------------------------------------------------------- Checks for event_triggers.on_ddl_drop () function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'event_triggers', 'on_ddl_drop ()', '()', 'event_triggers.on_ddl_drop  existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''event_triggers''   and proname = ''on_ddl_drop''   and pg_get_function_identity_arguments(oid) = '''';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'event_triggers', 'on_ddl_drop ()', '()', 'event_triggers.on_ddl_drop  definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''event_triggers''   and proname = ''on_ddl_drop''   and pg_get_function_identity_arguments(oid) = '''';', 'CREATE OR REPLACE FUNCTION event_triggers.on_ddl_drop() RETURNS event_trigger LANGUAGE plpgsqlAS $function$BEGININSERT INTO dba.ddl_event_log (			  classid,			  objid,			  objsubid,			  is_temporary,			  normal,			  original,			  object_identity,			  object_name,			  object_type,			  schema_name,			  address_args,			  address_names,			  trigger_event)	  SELECT ec.classid,			  ec.objid,			  ec.objsubid,			  ec.is_temporary,			  ec.normal,			  ec.original,			  ec.object_identity,			  ec.object_name,			  ec.object_type,			  ec.schema_name,			  ec.address_args,			  ec.address_names,			  TG_EVENT       FROM pg_event_trigger_dropped_objects() AS ec  LEFT JOIN pg_proc on pg_proc.oid = ec.objid;END$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');