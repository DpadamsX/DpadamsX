------------------------------------------------------------------------------------- Checks for types_plus.domo_passthrough_to_v1 (domo_passthrough_in domo_passthrough) function------------------------------------------------------------------------------------- Existence check:select * from test_case_setup('Function', 'types_plus', 'domo_passthrough_to_v1 (domo_passthrough_in domo_passthrough)', '()', 'types_plus.domo_passthrough_to_v1 domo_passthrough_in domo_passthrough existence check', 'select count(*) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''domo_passthrough_to_v1''   and pg_get_function_identity_arguments(oid) = ''domo_passthrough_in domo_passthrough'';', '1', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');-- Definition check:select * from test_case_setup('Function', 'types_plus', 'domo_passthrough_to_v1 (domo_passthrough_in domo_passthrough)', '()', 'types_plus.domo_passthrough_to_v1 domo_passthrough_in domo_passthrough definition check', 'select pg_get_functiondef(oid) from pg_proc where pronamespace::regnamespace::text = ''types_plus''   and proname = ''domo_passthrough_to_v1''   and pg_get_function_identity_arguments(oid) = ''domo_passthrough_in domo_passthrough'';', 'CREATE OR REPLACE FUNCTION types_plus.domo_passthrough_to_v1(domo_passthrough_in domo_passthrough) RETURNS domo_passthrough_v1 LANGUAGE sqlAS $function$        SELECT			domo_passthrough_in.source_id,			domo_passthrough_in.hsys_id,			domo_passthrough_in.facility_id,			domo_passthrough_in.view_version,			domo_passthrough_in.dataset_name,			domo_passthrough_in.data$function$', '', 'text', '{"comparator":"equals","column_order":"ignore","case_sensitivity":"blind","whitespace_cleaning":"all","normalize_line_endings":true}', 'Pass', '{user_change_structure}', FALSE, FALSE, '', '');