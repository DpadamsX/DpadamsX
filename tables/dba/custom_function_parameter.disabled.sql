-------------------------------------- Define table------------------------------------BEGIN;DROP TABLE IF EXISTS dba.custom_function_parameter CASCADE;CREATE TABLE IF NOT EXISTS dba.custom_function_parameter (	id uuid NOT NULL DEFAULT extensions.gen_random_uuid(), -- Pointless, but we always have one of these.	function_id uuid NOT NULL DEFAULT NULL,	specific_name text NOT NULL DEFAULT NULL,	ordinal_position integer NOT NULL DEFAULT NULL,	in_out_position integer NOT NULL DEFAULT NULL,	parameter_mode text NOT NULL DEFAULT NULL,	parameter_name text NOT NULL DEFAULT NULL,	data_type text NOT NULL DEFAULT NULL,	udt_name text NOT NULL DEFAULT NULL,	parameter_default text NOT NULL DEFAULT NULL,	required bool NOT NULL DEFAULT true,	check_type citext NOT NULL DEFAULT '',	check_range_from text NOT NULL DEFAULT '',	check_range_to text NOT NULL DEFAULT '',	check_series text NOT NULL DEFAULT '',	notes citext NOT NULL DEFAULT '');ALTER TABLE dba.custom_function_parameter	ADD CONSTRAINT custom_function_parameter_pkey    PRIMARY KEY (function_id,ordinal_position);ALTER TABLE dba.custom_function_parameter	ADD CONSTRAINT custom_function_parameter_id_unique	UNIQUE (id);ALTER TABLE dba.custom_function_parameter	OWNER TO user_change_structure;COMMIT;-------------------------------------- Build indexes-------------------------------------- No extra indexes needed yet, apart from uniques on id and PK above.-------------------------------------- Add triggers-------------------------------------- None needed at this point.