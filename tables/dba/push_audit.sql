-------------------------------------- Define table------------------------------------BEGIN;DROP TABLE IF EXISTS dba.push_audit CASCADE;-- Why the peculiar column order? column_tetris('push_audit').-- https://ascendco.atlassian.net/wiki/spaces/SON/pages/666501123/Arranging+Fields+to+Optimize+Disk+Space-- This is a potentially large table, and worth some fuss to make more efficient.CREATE TABLE IF NOT EXISTS dba.push_audit (    data_file_id                   uuid            NOT NULL DEFAULT NULL,    start_local_dts                timestamp       NOT NULL DEFAULT 'epoch',    end_local_dts                  timestamp       NOT NULL DEFAULT 'epoch',    end_utc_dts                    timestamp       NOT NULL DEFAULT 'epoch',    inserted_utc_dts               timestamptz     NOT NULL DEFAULT timezone('utc', clock_timestamp()),    id                             int4            GENERATED ALWAYS AS IDENTITY PRIMARY KEY, -- Unique, int-4 (longint in 4D) ID. Works like a con_id for us.    duration_seconds               int4            NOT NULL DEFAULT 0,    records_count                  int4            NOT NULL DEFAULT 0,    first_conid                    int4            NOT NULL DEFAULT 0,                       -- first and last ConID make the log a lot more helpful when something goes funny. May 8, 2021    last_conid                     int4            NOT NULL DEFAULT 0,    target_id                      int8            NOT NULL DEFAULT 0,                       -- Links to dba.push_target which holds schema, name, path, and target type.    version_number                 int2            NOT NULL DEFAULT 0,    error_occurred                 boolean         NOT NULL DEFAULT false,    client_user_name               citext          NOT NULL DEFAULT '',                     -- A client-side user name, if you like.    inserted_by                    citext          NOT NULL DEFAULT get_current_user(),     -- PG user name, which may be something like a data pump utility user name.    push_method_name               citext          NOT NULL DEFAULT '',                     -- Client side label attribute, helps with debugging.    error_text                     citext          NOT NULL DEFAULT '');ALTER TABLE dba.push_audit ADD CONSTRAINT   push_audit_push_target_fk   FOREIGN KEY (target_id)   REFERENCES dba.push_target (id)   ON DELETE CASCADE;ALTER TABLE dba.push_audit	OWNER TO user_change_structure;-------------------------------------- Build statistics------------------------------------/*The Postgres ANALYZE system function collects statistics about each table and column. These valuesare used by the query planner to help generate probabilistic cost estimates for various query plans.When the plans are based on misleading stats, you can have poor performance. Stats can be reconfiguredon a row-by-row basis, and some special extended statistics are supported too.Custom and extended statistics are typically added after we've been accumulating data for some time.See PgBuildStatistics_Extended in IB to declare new statistics objects. For more background, seehttps://ascendco.atlassian.net/wiki/spaces/SON/pages/1723695105/*/-------------------------------------- ANALYZE options-------------------------------------- Placholder and reminder for now. ANALYZE and AUTOVACUUM tunings are *core* Postgres DBA-- skills. But, for the minute, we're not running into trouble. I'm chipping away af figuring-- out when to tune, and how, and when not to tune. ‚Äî DPA-------------------------------------- Build indexes-------------------------------------- Note: Postgres automatically creates a UNIQUE B-tree for the PRIMARY KEY, simple or compound.-------------------------------------- CLUSTER------------------------------------/*Code stub/reminder about CLUSTERing. Not a hard topic, but too big to write up here. Notes and links:https://ascendco.atlassian.net/wiki/spaces/SON/pages/356679683/ALTER TABLE dba.push_audit    CLUSTER ON ***index name to cluster by here;*/-------------------------------------- Add triggers------------------------------------   CREATE TRIGGER trigger_push_audit_after_delete            AFTER DELETE               ON dba.push_audit      REFERENCING OLD TABLE AS deleted_rows         FOR EACH STATEMENTEXECUTE PROCEDURE ascendco.trigger_function_log_deletion_count();  CREATE TRIGGER trigger_push_audit_before_truncate            BEFORE TRUNCATE               ON dba.push_audit         FOR EACH STATEMENTEXECUTE PROCEDURE ascendco.trigger_function_log_truncation_count();-------------------------------------- Manual Permissions for now-------------------------------------- Standard permissions for utility/admin users...and few extra INSERT and UPDATE blessings.GRANT SELECT, INSERT, UPDATE, DELETE ON dba.push_audit TO rds_super;GRANT SELECT, INSERT, UPDATE, DELETE ON dba.push_audit TO user_cleanup;GRANT SELECT, INSERT, UPDATE ON dba.push_audit TO user_reporting;GRANT SELECT, INSERT, UPDATE ON dba.push_audit TO user_change_structure;-- Adjustable user permissions:GRANT SELECT, INSERT, UPDATE ON dba.push_audit TO user_iceberg;GRANT SELECT, INSERT, UPDATE ON dba.push_audit TO user_iceberg_remote;GRANT SELECT, INSERT, UPDATE ON dba.push_audit TO user_saws;GRANT SELECT, INSERT, UPDATE ON dba.push_audit TO user_sonar;GRANT SELECT, INSERT, UPDATE ON dba.push_audit TO user_leviathan;COMMIT;