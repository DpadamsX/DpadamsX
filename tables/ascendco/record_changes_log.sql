-------------------------------------- Define table------------------------------------BEGIN;DROP TABLE IF EXISTS ascendco.record_changes_log CASCADE;CREATE TABLE ascendco.record_changes_log (	id uuid NOT NULL,	table_number int4 NOT NULL DEFAULT 0,	record_id uuid NOT NULL,	updated_dts timestamptz(6) NOT NULL DEFAULT '-infinity'::timestamp with time zone,	app_type extensions.citext COLLATE pg_catalog.default NOT NULL,	machine_name extensions.citext COLLATE pg_catalog.default NOT NULL,	updated_by extensions.citext COLLATE pg_catalog.default NOT NULL);ALTER TABLE ascendco.record_changes_log	ADD CONSTRAINT record_changes_log_pkey	PRIMARY KEY (id);ALTER TABLE ascendco.record_changes_log	OWNER TO user_change_structure;COMMIT;-------------------------------------- Build indexes------------------------------------CREATE INDEX record_changes_log_record_id_ix_btree	ON ascendco.record_changes_log	USING btree (record_id pg_catalog.uuid_ops ASC NULLS LAST);-------------------------------------- Set default CLUSTER option------------------------------------ALTER TABLE ascendco.record_changes_log	CLUSTER ON record_changes_log_record_id_ix_btree;-------------------------------------- Add triggers------------------------------------CREATE TRIGGER trigger_record_changes_log_after_delete	AFTER DELETE	ON ascendco.record_changes_log	REFERENCING OLD TABLE AS deleted_rows	FOR EACH STATEMENT	EXECUTE PROCEDURE ascendco.trigger_function_log_deletion_count();CREATE TRIGGER trigger_record_changes_log_before_truncate	BEFORE TRUNCATE	ON ascendco.record_changes_log	FOR EACH STATEMENT	EXECUTE PROCEDURE ascendco.trigger_function_log_truncation_count();