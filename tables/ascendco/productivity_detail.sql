BEGIN;-- This destroys ALL partitions automatically, even without a CASCADE clause.DROP TABLE IF EXISTS ascendco.productivity_detail CASCADE;CREATE TABLE IF NOT EXISTS ascendco.productivity_detail (	id                         uuid      NOT NULL DEFAULT NULL, -- Based on source record ID, such as [Scan]ID or [Activity]ID.	data_file_id               uuid      NOT NULL DEFAULT NULL,	user_id                    uuid      NOT NULL DEFAULT NULL,	facility_id                uuid      NOT NULL DEFAULT NULL,	start_time_dts             timestamp NOT NULL DEFAULT '-infinity',	source_record_row_counter  int4      NOT NULL DEFAULT NULL, -- Based on source record ID, such as [Scan]ID or [Activity]ID.	source_table_number        integer   NOT NULL DEFAULT 0,  -- IceBerg table number for [Scan], [Assembly] and so on. Useful to count contributing rows, may be useful for subpartitions.	start_date                 date      NOT NULL DEFAULT NULL,	assembly_inst              integer   NOT NULL DEFAULT 0,	assembly_pack              integer   NOT NULL DEFAULT 0,	assembly_tray              integer   NOT NULL DEFAULT 0,	assembly_points            integer   NOT NULL DEFAULT 0,	assembly_seconds_trays     integer   NOT NULL DEFAULT 0,	assembly_seconds_overall   integer   NOT NULL DEFAULT 0,	pause_seconds              integer   NOT NULL DEFAULT 0,	duration_seconds           integer   NOT NULL DEFAULT 0,	placeholder_row            boolean   NOT NULL DEFAULT false,	description                citext    NOT NULL DEFAULT NULL,	year_and_month             text      NOT NULL DEFAULT NULL, -- YYYY-MM for partition. This is calculated by the insert function(s). Long story.	time_label                 citext    NOT NULL DEFAULT NULL,	duration                   citext    NOT NULL DEFAULT NULL,	pause_time                 citext    NOT NULL DEFAULT NULL,	activity                   citext    NOT NULL DEFAULT NULL,	user_label                 citext    NOT NULL DEFAULT NULL,-- Reminder: id values come from the various source tables in IB. The upsert writes over matches ON CONFLICT with this ID.-- Note: You *must* include the partition key in the primary key. It's a rule.CONSTRAINT productivity_detail_id_pkey    PRIMARY KEY (id,source_record_row_counter,year_and_month)) PARTITION BY LIST (year_and_month);CREATE INDEX productivity_detail_year_and_month_ix_btree	ON ascendco.productivity_detail(year_and_month);CREATE INDEX productivity_detail_facility_id_ix_btree	ON ascendco.productivity_detail(facility_id);ALTER TABLE ascendco.productivity_detail	OWNER TO user_change_structure;-- Build out 2020 completely.CREATE TABLE ascendco.productivity_detail_2020_01 partition of productivity_detail FOR VALUES IN ('2020-01');CREATE TABLE ascendco.productivity_detail_2020_02 partition of productivity_detail FOR VALUES IN ('2020-02');CREATE TABLE ascendco.productivity_detail_2020_03 partition of productivity_detail FOR VALUES IN ('2020-03');CREATE TABLE ascendco.productivity_detail_2020_04 partition of productivity_detail FOR VALUES IN ('2020-04');CREATE TABLE ascendco.productivity_detail_2020_05 partition of productivity_detail FOR VALUES IN ('2020-05');CREATE TABLE ascendco.productivity_detail_2020_06 partition of productivity_detail FOR VALUES IN ('2020-06');CREATE TABLE ascendco.productivity_detail_2020_07 partition of productivity_detail FOR VALUES IN ('2020-07');CREATE TABLE ascendco.productivity_detail_2020_08 partition of productivity_detail FOR VALUES IN ('2020-08');CREATE TABLE ascendco.productivity_detail_2020_09 partition of productivity_detail FOR VALUES IN ('2020-09');CREATE TABLE ascendco.productivity_detail_2020_10 partition of productivity_detail FOR VALUES IN ('2020-10');CREATE TABLE ascendco.productivity_detail_2020_11 partition of productivity_detail FOR VALUES IN ('2020-11');CREATE TABLE ascendco.productivity_detail_2020_12 partition of productivity_detail FOR VALUES IN ('2020-12');-- Build out 2021 completely.CREATE TABLE ascendco.productivity_detail_2021_01 partition of productivity_detail FOR VALUES IN ('2021-01');CREATE TABLE ascendco.productivity_detail_2021_02 partition of productivity_detail FOR VALUES IN ('2021-02');CREATE TABLE ascendco.productivity_detail_2021_03 partition of productivity_detail FOR VALUES IN ('2021-03');CREATE TABLE ascendco.productivity_detail_2021_04 partition of productivity_detail FOR VALUES IN ('2021-04');CREATE TABLE ascendco.productivity_detail_2021_05 partition of productivity_detail FOR VALUES IN ('2021-05');CREATE TABLE ascendco.productivity_detail_2021_06 partition of productivity_detail FOR VALUES IN ('2021-06');CREATE TABLE ascendco.productivity_detail_2021_07 partition of productivity_detail FOR VALUES IN ('2021-07');CREATE TABLE ascendco.productivity_detail_2021_08 partition of productivity_detail FOR VALUES IN ('2021-08');CREATE TABLE ascendco.productivity_detail_2021_09 partition of productivity_detail FOR VALUES IN ('2021-09');CREATE TABLE ascendco.productivity_detail_2021_10 partition of productivity_detail FOR VALUES IN ('2021-10');CREATE TABLE ascendco.productivity_detail_2021_11 partition of productivity_detail FOR VALUES IN ('2021-11');CREATE TABLE ascendco.productivity_detail_2021_12 partition of productivity_detail FOR VALUES IN ('2021-12');-- Need to add more partitions before the next year, or the'll spill into the default partition.-- See pgPartition_CheckDefaults for code we can use to automatically check for default-- partitions with unexpected records.CREATE TABLE ascendco.productivity_detail_default partition of productivity_detail DEFAULT;COMMIT;