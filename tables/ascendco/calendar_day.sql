-------------------------------------- Define table-------------------------------------- Adapted from-- https://dev.to/duffn/creating-a-date-dimension-table-in-postgresql-5gjpBEGIN;DROP TABLE if exists ascendco.calendar_day CASCADE;CREATE TABLE ascendco.calendar_day(  id                               citext    NOT NULL DEFAULT NULL PRIMARY KEY,  -- calendar_year_id + YYYYMMDD  calendar_id                      uuid      NOT NULL DEFAULT NULL,  calendar_year_id                 uuid      NOT NULL DEFAULT NULL,  date_actual                      date      NOT NULL DEFAULT NULL,  epoch                            int8      NOT NULL DEFAULT NULL,  day_suffix                       citext    NOT NULL DEFAULT NULL,  day_name                         citext    NOT NULL DEFAULT NULL,  day_name_abbreviated             citext    NOT NULL DEFAULT NULL,  day_of_week_usa                  integer   NOT NULL DEFAULT NULL,  -- 1-7 day numbers, Sunday-Saturday, like 4D.  day_of_week_iso                  integer   NOT NULL DEFAULT NULL,  -- 1-7 day numbers, Monday-Sunday  day_of_month_actual              integer   NOT NULL DEFAULT NULL,  day_of_quarter_iso               integer   NOT NULL DEFAULT NULL,  day_of_year_actual               integer   NOT NULL DEFAULT NULL,  day_of_year_fiscal               integer   NOT NULL DEFAULT NULL,  week_of_month_actual             integer   NOT NULL DEFAULT NULL,  week_of_year_actual              integer   NOT NULL DEFAULT NULL,  -- 24  week_of_year_fiscal_name         citext    NOT NULL DEFAULT NULL,  -- Week 24 2020  week_of_year_fiscal              citext    NOT NULL DEFAULT NULL,  -- 2020-24  week_of_year_iso                 citext    NOT NULL DEFAULT NULL,  -- 2020-24  month_actual                     integer   NOT NULL DEFAULT NULL,  month_actual_name                citext    NOT NULL DEFAULT NULL,  month_actual_name_abbreviated    citext    NOT NULL DEFAULT NULL,  month_fiscal                     integer   NOT NULL DEFAULT NULL,  month_fiscal_name                citext    NOT NULL DEFAULT NULL,  month_fiscal_name_abbreviated    citext    NOT NULL DEFAULT NULL,  quarter_actual                   integer   NOT NULL DEFAULT NULL,  quarter_actual_name              citext    NOT NULL DEFAULT NULL,  quarter_fiscal                   integer   NOT NULL DEFAULT NULL,  quarter_fiscal_name              citext    NOT NULL DEFAULT NULL,  year_actual                      integer   NOT NULL DEFAULT NULL,  -- year_fiscal_name is pulled via a join from fiscal_year.fiscal_year_name  -- year_fiscal_abbr is pulled via a join from fiscal_year.fiscal_year_abbr  first_date_of_week                date      NOT NULL DEFAULT NULL,  last_date_of_week                 date      NOT NULL DEFAULT NULL,  first_date_of_month               date      NOT NULL DEFAULT NULL,  last_date_of_month                date      NOT NULL DEFAULT NULL,  first_date_of_quarter             date      NOT NULL DEFAULT NULL,  last_date_of_quarter              date      NOT NULL DEFAULT NULL,  first_date_of_year_actual         date      NOT NULL DEFAULT NULL,  last_date_of_year_actual          date      NOT NULL DEFAULT NULL,  first_date_of_year_fiscal         date      NOT NULL DEFAULT NULL,  last_date_of_year_fiscal          date      NOT NULL DEFAULT NULL,  mmyyyyy                           citext    NOT NULL DEFAULT NULL,  mmddyyyy                          citext    NOT NULL DEFAULT NULL,  ddmmyyyyy                         citext    NOT NULL DEFAULT NULL,  weekend                           boolean   NOT NULL DEFAULT NULL);ALTER TABLE ascendco.calendar_day	ADD CONSTRAINT calendar_day_calendar_year_fk	FOREIGN KEY (calendar_year_id) REFERENCES calendar_year(id)	ON DELETE CASCADE;ALTER TABLE ascendco.calendar_day	OWNER TO user_change_structure;COMMIT;-------------------------------------- Build indexes-------------------------------------- CREATE INDEX calendar_day_date_actual_idx--  ON ascendco.calendar_day(date_actual);-------------------------------------- Define trigger functions-------------------------------------- In PG 12 we can use generated columns instead.CREATE OR REPLACE FUNCTION ascendco.trigger_function_calendar_day_before_insert()  RETURNS triggerAS $BODY$BEGIN	NEW.id := NEW.calendar_id || '.' || TO_CHAR(NEW.date_actual, 'YYYY-MM-DD'); RETURN NEW;END$BODY$  LANGUAGE plpgsql VOLATILE  COST 100;ALTER FUNCTION ascendco.trigger_function_calendar_day_before_insert	OWNER TO user_bender;-------------------------------------- Add triggers------------------------------------CREATE TRIGGER calendar_day_before_insert	BEFORE INSERT	ON ascendco.calendar_day	FOR EACH ROW	EXECUTE PROCEDURE trigger_function_calendar_day_before_insert();-------------------------------------- Manual Permissions for now------------------------------------GRANT SELECT, INSERT, UPDATE, DELETE ON ascendco.calendar_day TO rds_super;GRANT SELECT ON ascendco.calendar_day TO user_reporting;GRANT SELECT ON ascendco.calendar_day TO user_iceberg;GRANT SELECT ON ascendco.calendar_day TO user_iceberg_remote;GRANT SELECT ON ascendco.calendar_day TO user_saws;GRANT SELECT ON ascendco.calendar_day TO user_sonar;GRANT SELECT ON ascendco.calendar_day TO user_leviathan;GRANT SELECT ON ascendco.calendar_day TO user_change_structure;