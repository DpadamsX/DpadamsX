------------------------------------
-- Define table
------------------------------------
BEGIN;

DROP TABLE IF EXISTS ascendco.analytic_sterilizer_load CASCADE;

CREATE TABLE IF NOT EXISTS ascendco.analytic_sterilizer_load (
	id uuid NOT NULL DEFAULT NULL,
	marked_for_deletion boolean NOT NULL DEFAULT false,
--	pg_con_id integer GENERATED BY DEFAULT AS IDENTITY UNIQUE,
	data_file_id uuid NOT NULL DEFAULT NULL,
	sterilize_method_id uuid NOT NULL DEFAULT NULL,
	sterilize_params_id uuid NOT NULL DEFAULT NULL,
	sterilizer_id uuid NOT NULL DEFAULT NULL,
	facility_id uuid NOT NULL DEFAULT NULL,
	web_user_id uuid NOT NULL DEFAULT NULL,

	status_building_dts timestamptz NOT NULL DEFAULT '-infinity',
	status_building_local_dts timestamptz NOT NULL DEFAULT '-infinity',
	status_done_dts timestamptz NOT NULL DEFAULT '-infinity',
	status_done_local_dts timestamptz NOT NULL DEFAULT '-infinity',
	status citext NOT NULL DEFAULT NULL,
	is_iuss boolean NOT NULL DEFAULT NULL,

	instruments_count integer NOT NULL DEFAULT NULL,
	packs_count integer NOT NULL DEFAULT NULL,
	trays_count integer NOT NULL DEFAULT NULL
);

ALTER TABLE ascendco.analytic_sterilizer_load
	ADD CONSTRAINT analytic_sterilizer_load_id_pkey
    PRIMARY KEY (id);

ALTER TABLE ascendco.analytic_sterilizer_load
	OWNER TO user_change_structure;

COMMIT;

------------------------------------
-- Build indexes
------------------------------------
CREATE INDEX analytic_sterilizer_load_facility_id_ix_fkey
	ON ascendco.analytic_sterilizer_load
	USING btree(facility_id pg_catalog.uuid_ops ASC NULLS LAST);

CREATE INDEX analytic_sterilizer_load_instruments_count_ix_btree
	ON ascendco.analytic_sterilizer_load
	USING btree(instruments_count pg_catalog.int4_ops ASC NULLS LAST);

CREATE INDEX analytic_sterilizer_load_packs_count_ix_btree
	ON ascendco.analytic_sterilizer_load
	USING btree(packs_count pg_catalog.int4_ops ASC NULLS LAST);

CREATE INDEX analytic_sterilizer_load_sterilize_params_id_ix_fkey
	ON ascendco.analytic_sterilizer_load
	USING btree(sterilize_params_id pg_catalog.uuid_ops ASC NULLS LAST);

CREATE INDEX analytic_sterilizer_load_sterilizer_id_ix_fkey
	ON ascendco.analytic_sterilizer_load
	USING btree(sterilizer_id pg_catalog.uuid_ops ASC NULLS LAST);

CREATE INDEX analytic_sterilizer_load_trays_count_count_ix_btree
	ON ascendco.analytic_sterilizer_load
	USING btree(trays_count pg_catalog.int4_ops ASC NULLS LAST);

CREATE INDEX analytic_sterilizer_load_web_user_id_ix_fkey
	ON ascendco.analytic_sterilizer_load
	USING btree(web_user_id pg_catalog.uuid_ops ASC NULLS LAST);

CREATE INDEX analytic_sterilizer_marked_for_deletion_ix_bgin
	ON ascendco.analytic_sterilizer_load
	USING gin(marked_for_deletion extensions.bool_ops)
	WHERE marked_for_deletion = true;

------------------------------------
-- Add triggers
------------------------------------
CREATE TRIGGER trigger_analytic_sterilizer_load_after_delete
	AFTER DELETE
	ON ascendco.analytic_sterilizer_load
	REFERENCING OLD TABLE AS deleted_rows
	FOR EACH STATEMENT
	EXECUTE PROCEDURE ascendco.trigger_function_log_deletion_count();

CREATE TRIGGER trigger_analytic_sterilizer_load_before_truncate
	BEFORE TRUNCATE
	ON ascendco.analytic_sterilizer_load
	FOR EACH STATEMENT
	EXECUTE PROCEDURE ascendco.trigger_function_log_truncation_count();