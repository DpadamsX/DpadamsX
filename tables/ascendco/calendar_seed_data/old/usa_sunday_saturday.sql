-------------------------------------- Insert parent calendar record------------------------------------BEGIN;DELETE FROM  api.calendar WHERE id = '21c27277-3aa4-4396-9293-c342cc693adc'; -- Cascades to calendar_date.INSERT INTO api.calendar (id,calendar_name,description)     VALUES ('21c27277-3aa4-4396-9293-c342cc693adc',             'USA Sunday-Saturday',             'Week 1 is the earliest Sunday in the week with Jan 1, even if it''s in the previous year.'           );-------------------------------------- Insert dates-------------------------------------- Organize the field list to split up the more standard elements from the more variable ones.INSERT INTO api.calendar_date (    --------------------------------------------------------------------    -- IDs and similar    --------------------------------------------------------------------       calendar_date_id,       calendar_id,       date_actual,       epoch,    --------------------------------------------------------------------    -- Values that won't change across calendars, or not much.    --------------------------------------------------------------------       day_suffix,       day_name,       day_name_abbreviated,       day_of_week_usa,       day_of_week_iso,       day_of_month,       day_of_quarter_iso,       day_of_year,       weekend,       week_of_year_iso,       month_actual,       month_name,       month_name_abbreviated,       year_actual,       first_day_of_month,       last_day_of_month,       first_day_of_year,       last_day_of_year,       mmyyyyy,       mmddyyyy,       ddmmyyyyy,    --------------------------------------------------------------------    -- Values that will likely vary    --------------------------------------------------------------------       week_of_month,       week_of_year_fiscal,       quarter_actual,       quarter_name,       first_day_of_week,       last_day_of_week,       first_day_of_quarter,       last_day_of_quarter     )-- The SELECT here is applied to each date, and then INSERTED using the field list order above.SELECT    --------------------------------------------------------------------    -- IDs and similar    --------------------------------------------------------------------   '21c27277-3aa4-4396-9293-c342cc693adc' || TO_CHAR(datum, 'yyyymmdd')::INT AS calendar_date_id, -- PK   '21c27277-3aa4-4396-9293-c342cc693adc' AS calendar_id, -- FK    datum AS date_actual,    EXTRACT(EPOCH FROM datum) AS epoch,    --------------------------------------------------------------------    -- Values that won't change across calendars, or not much.    --------------------------------------------------------------------    TO_CHAR(datum, 'fmDDth') AS day_suffix,    TO_CHAR(datum, 'Day') AS day_name,    TO_CHAR(datum, 'Dy') AS day_name_abbreviated,    EXTRACT(DOW FROM datum) + 1 AS day_of_week_usa,    -- 1-7 for Sunday-Monday, like 4D.    EXTRACT(ISODOW FROM datum) AS day_of_week_iso,     -- 1-7 for Monday-Sunday.    EXTRACT(DAY FROM datum) AS day_of_month,    datum - DATE_TRUNC('quarter', datum)::DATE + 1 AS day_of_quarter_iso,    EXTRACT(DOY FROM datum) AS day_of_year,    CASE       WHEN EXTRACT(ISODOW FROM datum) IN (6, 7) THEN TRUE       ELSE FALSE    END AS weekend,    EXTRACT(ISOYEAR FROM datum) || TO_CHAR(datum, '"-W"IW-') || EXTRACT(ISODOW FROM datum) AS week_of_year_iso,    EXTRACT(MONTH FROM datum) AS month_actual,    TO_CHAR(datum, 'Month') AS month_name,    TO_CHAR(datum, 'Mon') AS month_name_abbreviated,    EXTRACT(ISOYEAR FROM datum) AS year_actual,    datum + (1 - EXTRACT(DAY FROM datum))::INT AS first_day_of_month,   (DATE_TRUNC('MONTH', datum) + INTERVAL '1 MONTH - 1 day')::DATE AS last_day_of_month,    TO_DATE(EXTRACT(YEAR FROM datum) || '-01-01', 'YYYY-MM-DD') AS first_day_of_year,    TO_DATE(EXTRACT(YEAR FROM datum) || '-12-31', 'YYYY-MM-DD') AS last_day_of_year,    TO_CHAR(datum, 'mmyyyyy') AS mmyyyyy,    TO_CHAR(datum, 'mmddyyyy') AS mmddyyyy,    TO_CHAR(datum, 'ddmmyyyyy') AS ddmmyyyyy,    --------------------------------------------------------------------    -- Values that will likely vary    --------------------------------------------------------------------    TO_CHAR(datum + '1 day'::interval, 'W')::INT AS week_of_month,    TO_CHAR(datum + '1 day'::interval,'YYYY') || '-' || to_char(datum,'WW') AS week_of_year_fiscal,    EXTRACT(QUARTER FROM datum) AS quarter_actual,    CASE       WHEN EXTRACT(QUARTER FROM datum) = 1 THEN 'First'       WHEN EXTRACT(QUARTER FROM datum) = 2 THEN 'Second'       WHEN EXTRACT(QUARTER FROM datum) = 3 THEN 'Third'       WHEN EXTRACT(QUARTER FROM datum) = 4 THEN 'Fourth'    END AS quarter_name,    datum + (0 - EXTRACT(ISODOW FROM datum))::INT AS first_day_of_week,    datum + (6 - EXTRACT(ISODOW FROM datum))::INT AS last_day_of_week,    DATE_TRUNC('quarter', datum)::DATE AS first_day_of_quarter,   (DATE_TRUNC('quarter', datum) + INTERVAL '3 MONTH - 1 day')::DATE AS last_day_of_quarter-- Synthesize a list of dates. This is then run against each line in the SELECT above,-- and the result is inserted into calendar_date.FROM (SELECT '2015-01-01'::DATE + SEQUENCE.DAY AS datum      FROM GENERATE_SERIES(0, 3660) AS SEQUENCE (DAY)      GROUP BY SEQUENCE.DAY) DQORDER BY 1;COMMIT;