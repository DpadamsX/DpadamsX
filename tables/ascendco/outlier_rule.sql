-------------------------------------- Define table------------------------------------BEGIN;DROP TABLE IF EXISTS ascendco.outlier_rule CASCADE;CREATE TABLE IF NOT EXISTS ascendco.outlier_rule (	id uuid NOT NULL DEFAULT extensions.gen_random_uuid(),	schema_name text NOT NULL DEFAULT NULL,	table_name text NOT NULL DEFAULT NULL,	column_name text NOT NULL DEFAULT NULL,	threshold integer,	set_to integer);ALTER TABLE ascendco.outlier_rule	ADD CONSTRAINT outlier_rule_pkey    PRIMARY KEY (schema_name,table_name,column_name);ALTER TABLE ascendco.outlier_rule	OWNER TO user_change_structure;COMMIT;-------------------------------------- Build indexes------------------------------------CREATE UNIQUE INDEX outlier_rule_id_unique	ON outlier_rule (id);ALTER TABLE ascendco.outlier_rule	ADD CONSTRAINT outlier_rule_id_unique 	UNIQUE USING INDEX outlier_rule_id_unique;-------------------------------------- Add triggers------------------------------------CREATE TRIGGER trigger_outlier_rule_after_delete	AFTER DELETE	ON ascendco.outlier_rule	REFERENCING OLD TABLE AS deleted_rows 	FOR EACH STATEMENT	EXECUTE PROCEDURE ascendco.trigger_function_log_deletion_count();CREATE TRIGGER trigger_outlier_rule_before_truncate	BEFORE TRUNCATE	ON ascendco.outlier_rule	FOR EACH STATEMENT	EXECUTE PROCEDURE ascendco.trigger_function_log_truncation_count();