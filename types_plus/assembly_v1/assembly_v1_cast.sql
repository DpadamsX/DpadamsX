-- Create a casting function to convert assembly rows into the compound type format assembly_v1.-- If assembly changes, you can update the casting to handle the modification smoothly.CREATE OR REPLACE FUNCTION types_plus.assembly_to_v1 (assembly_in assembly)  RETURNS assembly_v1AS $BODY$        SELECT			assembly_in.id,			assembly_in.data_file_id,			assembly_in.marked_for_deletion,			assembly_in.created_by_user_id,			assembly_in.done_by_user_id,			assembly_in.facility_location_id,			assembly_in.inv_id,			assembly_in.last_updated_by_data_file_id,			assembly_in.updated_by_user_id,			assembly_in.is_complete,			assembly_in.is_quick_turn,			assembly_in.con_id,			assembly_in.created_by,			assembly_in.difficulty,			assembly_in.quantity,			assembly_in.sequence_no,			assembly_in.num_inst,			assembly_in.points,			assembly_in.done_dts,			assembly_in.created_dts,			assembly_in.updated_dts,			assembly_in.missing_list,			assembly_in.priority,			assembly_in.status,			assembly_in.updated_by$BODY$LANGUAGE sql;ALTER FUNCTION types_plus.assembly_to_v1 (assembly_in assembly) OWNER TO user_bender;-- Create/recreate the CAST. Use this to convert assembly rows into the assembly_v1 compound type format using the following syntax:-- select assembly::assembly_v1 from assemblyDROP CAST IF EXISTS (assembly as assembly_v1);CREATE CAST (assembly as assembly_v1) WITH FUNCTION types_plus.assembly_to_v1(assembly);