-- Create a casting function to convert loaner_case rows into the compound type format loaner_case_v1.-- If loaner_case changes, you can update the casting to handle the modification smoothly.CREATE OR REPLACE FUNCTION types_plus.loaner_case_to_v1 (loaner_case_in loaner_case)  RETURNS loaner_case_v1AS $BODY$                   SELECT			loaner_case_in.id,			loaner_case_in.loaner_id,			loaner_case_in.last_updated_by_data_file_id,			loaner_case_in.updated_dts,			loaner_case_in.created_dts,			loaner_case_in.case_dts,			loaner_case_in.marked_for_deletion,			loaner_case_in.desc_,			loaner_case_in.surgeon,			loaner_case_in.updated_by,			loaner_case_in.created_by               $BODY$LANGUAGE sql;  ALTER FUNCTION types_plus.loaner_case_to_v1 (loaner_case_in loaner_case)	OWNER TO user_bender;-- Create/recreate the CAST. Use this to convert loaner_case rows into the loaner_case_v1 compound type format using the following syntax:-- select loaner_case::loaner_case_v1 from loaner_caseDROP CAST IF EXISTS (loaner_case as loaner_case_v1);CREATE CAST (loaner_case as loaner_case_v1) WITH FUNCTION types_plus.loaner_case_to_v1(loaner_case);