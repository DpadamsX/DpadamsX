-- Create a casting function to convert item_arch rows into the compound type format item_arch_v1.-- If item_arch changes, you can update the casting to handle the modification smoothly.CREATE OR REPLACE FUNCTION types_plus.item_arch_to_v1 (item_arch_in item_arch)  RETURNS item_arch_v1AS $BODY$                   SELECT			item_arch_in.id,			item_arch_in.facility_id,			item_arch_in.clinic_id,			item_arch_in.created_dts,			item_arch_in.updated_dts,			item_arch_in.previous_as_of,			item_arch_in.marked_for_deletion,			item_arch_in.is_current,			item_arch_in.name_,			item_arch_in.type_,			item_arch_in.created_by,			item_arch_in.updated_by               $BODY$LANGUAGE sql;  ALTER FUNCTION types_plus.item_arch_to_v1 (item_arch_in item_arch)	OWNER TO user_bender;-- Create/recreate the CAST. Use this to convert item_arch rows into the item_arch_v1 compound type format using the following syntax:-- select item_arch::item_arch_v1 from item_archDROP CAST IF EXISTS (item_arch as item_arch_v1);CREATE CAST (item_arch as item_arch_v1) WITH FUNCTION types_plus.item_arch_to_v1(item_arch);