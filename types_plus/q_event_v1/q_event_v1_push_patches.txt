// types_plus.q_event_v1 is both an updatable view, and a type.//   or_surgeon_people_id           uuid,//   id                             uuid,//   qtype_id                       uuid,//   qsub_type_id                   uuid,//   inv_id                         uuid,//   scan_id                        uuid,//   assembly_id                    uuid,//   status_when_user_id            uuid,//   facility_id                    uuid,//   last_updated_by_data_file_id   uuid,//   status_reported_by_user_id     uuid,//   status_done_user_id            uuid,//   status_investigating_user_id   uuid,//   datetime_local                 timestamp,//   status_done_dts                timestamp,//   status_when_dts                timestamp,//   status_investigating_dts       timestamp,//   status_reported_dts            timestamp,//   updated_dts                    timestamp,//   created_dts                    timestamp,//   or_delay_minutes               double precision,//   marked_for_deletion            boolean,//   is_data_problem                boolean,//   is_process_problem             boolean,//   assembly_audit_prods           boolean,//   is_coached                     boolean,//   updated_by                     citext,//   or_room                        citext,//   status_done_name               citext,//   status                         citext,//   status_when_name               citext,//   desc_                          citext,//   status_investigating_name      citext,//   or_delay_type                  citext,//   status_reported_by_name        citext,//   notes                          citext,//   created_by                     citext: ($configuration_o.format_version_number=1) // Added: Jan 13, 2021	$clause_text:=$clause_text+PgConvert_UUID_ToPG_For_INSERT([QEvent]OR_SurgeonPeopleID)+","// q_event.or_surgeon_people_id	$clause_text:=$clause_text+PgConvert_UUID_ToPG_For_INSERT([QEvent]ID)+","// q_event.id	$clause_text:=$clause_text+PgConvert_UUID_ToPG_For_INSERT([QEvent]QTypeID)+","// q_event.qtype_id	$clause_text:=$clause_text+PgConvert_UUID_ToPG_For_INSERT([QEvent]QSubTypeID)+","// q_event.qsub_type_id	$clause_text:=$clause_text+PgConvert_UUID_ToPG_For_INSERT([QEvent]InvID)+","// q_event.inv_id	$clause_text:=$clause_text+PgConvert_UUID_ToPG_For_INSERT([QEvent]ScanID)+","// q_event.scan_id	$clause_text:=$clause_text+PgConvert_UUID_ToPG_For_INSERT([QEvent]AssemblyID)+","// q_event.assembly_id	$clause_text:=$clause_text+PgConvert_UUID_ToPG_For_INSERT([QEvent]Status_When_UserID)+","// q_event.status_when_user_id	$clause_text:=$clause_text+PgConvert_UUID_ToPG_For_INSERT([QEvent]FacilityID)+","// q_event.facility_id	$clause_text:=$clause_text+PgConvert_UUID_ToPG_For_INSERT([QEvent]LastUpdatedByDataFileID)+","// q_event.last_updated_by_data_file_id	$clause_text:=$clause_text+PgConvert_UUID_ToPG_For_INSERT([QEvent]Status_ReportedBy_UserID)+","// q_event.status_reported_by_user_id	$clause_text:=$clause_text+PgConvert_UUID_ToPG_For_INSERT([QEvent]Status_Done_UserID)+","// q_event.status_done_user_id	$clause_text:=$clause_text+PgConvert_UUID_ToPG_For_INSERT([QEvent]Status_Investigating_UserID)+","// q_event.status_investigating_user_id	$clause_text:=$clause_text+PgConvert_DTS_ToPG($row_o.datetime_local)+","// Calculated field: datetime_local	$clause_text:=$clause_text+PgConvert_DTS_ToPG([QEvent]Status_Done_DTS)+","// q_event.status_done_dts	$clause_text:=$clause_text+PgConvert_DTS_ToPG([QEvent]Status_When_DTS)+","// q_event.status_when_dts	$clause_text:=$clause_text+PgConvert_DTS_ToPG([QEvent]Status_Investigating_DTS)+","// q_event.status_investigating_dts	$clause_text:=$clause_text+PgConvert_DTS_ToPG([QEvent]Status_Reported_DTS)+","// q_event.status_reported_dts	$clause_text:=$clause_text+PgConvert_DTS_ToPG([QEvent]UpdatedDTS)+","// q_event.updated_dts	$clause_text:=$clause_text+PgConvert_DTS_ToPG([QEvent]CreatedDTS)+","// q_event.created_dts	$clause_text:=$clause_text+PgConvert_Number_ToPG([QEvent]OR_DelayMinutes)+","// q_event.or_delay_minutes	$clause_text:=$clause_text+PgConvert_DateIsNotEmpty_ToPG([QEvent]DeletedRecordDate)+","// System field: marked_for_deletion	$clause_text:=$clause_text+PgConvert_Boolean_ToPG([QEvent]isDataProblem)+","// q_event.is_data_problem	$clause_text:=$clause_text+PgConvert_Boolean_ToPG([QEvent]isProcessProblem)+","// q_event.is_process_problem	$clause_text:=$clause_text+PgConvert_Boolean_ToPG([QEvent]AssemblyAuditProds)+","// q_event.assembly_audit_prods	$clause_text:=$clause_text+PgConvert_Boolean_ToPG([QEvent]isCoached)+","// q_event.is_coached	$clause_text:=$clause_text+PgConvert_Text_ToPG([QEvent]UpdatedBy)+","// q_event.updated_by	$clause_text:=$clause_text+PgConvert_Text_ToPG([QEvent]OR_Room)+","// q_event.or_room	$clause_text:=$clause_text+PgConvert_Text_ToPG([QEvent]Status_Done_Name)+","// q_event.status_done_name	$clause_text:=$clause_text+PgConvert_Text_ToPG([QEvent]Status)+","// q_event.status	$clause_text:=$clause_text+PgConvert_Text_ToPG([QEvent]Status_When_Name)+","// q_event.status_when_name	$clause_text:=$clause_text+PgConvert_Text_ToPG([QEvent]Desc)+","// q_event.desc_	$clause_text:=$clause_text+PgConvert_Text_ToPG([QEvent]Status_Investigating_Name)+","// q_event.status_investigating_name	$clause_text:=$clause_text+PgConvert_Text_ToPG([QEvent]OR_DelayType)+","// q_event.or_delay_type	$clause_text:=$clause_text+PgConvert_Text_ToPG([QEvent]Status_ReportedBy_Name)+","// q_event.status_reported_by_name	$clause_text:=$clause_text+PgConvert_Text_ToPG([QEvent]Notes)+","// q_event.notes	$clause_text:=$clause_text+PgConvert_Text_ToPG([QEvent]CreatedBy)// q_event.created_by