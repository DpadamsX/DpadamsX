-- Create a casting function to convert activity rows into the compound type format activity_v2.-- If activity changes, you can update the casting to handle the modification smoothly.CREATE OR REPLACE FUNCTION types_plus.activity_to_v2 (activity_in activity)  RETURNS activity_v2AS $BODY$                   SELECT			activity_in.id,			activity_in.facility_id,			activity_in.facility_activities_id,			activity_in.web_user_id,			activity_in.last_updated_by_data_file_id,			activity_in.updated_dts,			activity_in.created_dts,			activity_in.done_dts,			activity_in.start_dts,			activity_in.duration_seconds,			activity_in.marked_for_deletion,			activity_in.other_desc,			activity_in.created_by,			activity_in.updated_by               $BODY$LANGUAGE sql;  ALTER FUNCTION types_plus.activity_to_v2 (activity_in activity)	OWNER TO user_bender;-- Create/recreate the CAST. Use this to convert activity rows into the activity_v2 compound type format using the following syntax:-- select activity::activity_v2 from activityDROP CAST IF EXISTS (activity as activity_v2);CREATE CAST (activity as activity_v2) WITH FUNCTION types_plus.activity_to_v2(activity);