-- Create a view onto hsys formatted as hsys_v2.-- If hsys changes, you can update the view to handle the modification smoothly.-- Note: This view is automatically a custom type, with an array type to match. See types_plus.insert_hsys_v2.DROP VIEW IF EXISTS types_plus.hsys_v2 CASCADE;-- Careful!CREATE OR REPLACE VIEW types_plus.hsys_v2 AS select id,        marked_for_deletion,        name_,        sonar_client_version,        sonar_server_version,        sonar_browser_version   from hsys;ALTER TABLE types_plus.hsys_v2    OWNER TO user_change_structure;-- Create a casting function to convert hsys rows into the compound type format hsys_v2.-- If hsys changes, you can update the casting to handle the modification smoothly.CREATE OR REPLACE FUNCTION types_plus.hsys_to_v2 (hsys_in hsys)  RETURNS hsys_v2AS $BODY$        SELECT			hsys_in.id,			hsys_in.marked_for_deletion,			hsys_in.name_,			hsys_in.sonar_client_version,			hsys_in.sonar_server_version,			hsys_in.sonar_browser_version$BODY$LANGUAGE sql;ALTER FUNCTION types_plus.hsys_to_v2 (hsys_in hsys) OWNER TO user_bender;-- Create/recreate the CAST. Use this to convert hsys rows into the hsys_v2 compound type format using the following syntax:-- select hsys::hsys_v2 from hsysDROP CAST IF EXISTS (hsys as hsys_v2);CREATE CAST (hsys as hsys_v2) WITH FUNCTION types_plus.hsys_to_v2(hsys);-- Create a function to accept an array of rows formatted as hsys_v2 for UPSERT into hsys.DROP FUNCTION IF EXISTS types_plus.insert_hsys_v2 (types_plus.hsys_v2[]);CREATE OR REPLACE FUNCTION types_plus.insert_hsys_v2 (data_in types_plus.hsys_v2[])  RETURNS intAS $BODY$-- The CTE below is a roundabout way of returning an insertion count from a pure SQL function in Postgres.with inserted_rows as (        INSERT INTO hsys (			id,			marked_for_deletion,			name_,			sonar_client_version,			sonar_server_version,			sonar_browser_version)        SELECT			rows_in.id,			rows_in.marked_for_deletion,			rows_in.name_,			rows_in.sonar_client_version,			rows_in.sonar_server_version,			rows_in.sonar_browser_version        FROM unnest(data_in) as rows_in        ON CONFLICT(id) DO UPDATE SET			marked_for_deletion = EXCLUDED.marked_for_deletion,			name_ = EXCLUDED.name_,			sonar_client_version = EXCLUDED.sonar_client_version,			sonar_server_version = EXCLUDED.sonar_server_version,			sonar_browser_version = EXCLUDED.sonar_browser_version        returning 1 as row_counter)    select sum(row_counter)::integer from inserted_rows;$BODY$LANGUAGE sql;ALTER FUNCTION types_plus.insert_hsys_v2(types_plus.hsys_v2[]) OWNER TO user_bender;