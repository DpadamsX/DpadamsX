-- Create a casting function to convert loaner_item rows into the compound type format loaner_item_v1.-- If loaner_item changes, you can update the casting to handle the modification smoothly.CREATE OR REPLACE FUNCTION types_plus.loaner_item_to_v1 (loaner_item_in loaner_item)  RETURNS loaner_item_v1AS $BODY$                   SELECT			loaner_item_in.id,			loaner_item_in.loaner_id,			loaner_item_in.item_id,			loaner_item_in.last_updated_by_data_file_id,			loaner_item_in.updated_dts,			loaner_item_in.created_dts,			loaner_item_in.left_behind_qty,			loaner_item_in.qty,			loaner_item_in.pickup_qty,			loaner_item_in.marked_for_deletion,			loaner_item_in.updated_by,			loaner_item_in.created_by               $BODY$LANGUAGE sql;  ALTER FUNCTION types_plus.loaner_item_to_v1 (loaner_item_in loaner_item)	OWNER TO user_bender;-- Create/recreate the CAST. Use this to convert loaner_item rows into the loaner_item_v1 compound type format using the following syntax:-- select loaner_item::loaner_item_v1 from loaner_itemDROP CAST IF EXISTS (loaner_item as loaner_item_v1);CREATE CAST (loaner_item as loaner_item_v1) WITH FUNCTION types_plus.loaner_item_to_v1(loaner_item);