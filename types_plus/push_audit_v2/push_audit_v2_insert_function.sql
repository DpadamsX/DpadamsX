-- Create a function to accept an array of rows formatted as push_audit_v2 for UPSERT into push_audit.DROP FUNCTION IF EXISTS types_plus.insert_push_audit_v2 (types_plus.push_audit_v2[]);  CREATE OR REPLACE FUNCTION types_plus.insert_push_audit_v2 (data_in types_plus.push_audit_v2[])  RETURNS intAS $BODY$ -- The CTE below is a roundabout way of returning an insertion count from a pure SQL function in Postgres.with inserted_rows as (        INSERT INTO push_audit (			id,			target_id,			data_file_id,			pg_config_target_version_id,			start_local_dts,			end_utc_dts,			end_local_dts,			inserted_utc_dts,			first_con_id,			last_con_id,			records_count,			duration_seconds,			error_occurred,			client_user_name,			inserted_by,			push_method_name,			error_text,			result_text)                  SELECT			rows_in.id,			rows_in.target_id,			rows_in.data_file_id,			rows_in.pg_config_target_version_id,			rows_in.start_local_dts,			rows_in.end_utc_dts,			rows_in.end_local_dts,			rows_in.inserted_utc_dts,			rows_in.first_con_id,			rows_in.last_con_id,			rows_in.records_count,			rows_in.duration_seconds,			rows_in.error_occurred,			rows_in.client_user_name,			rows_in.inserted_by,			rows_in.push_method_name,			rows_in.error_text,			rows_in.result_text                      FROM unnest(data_in) as rows_in                  ON CONFLICT(id) DO UPDATE SET			target_id = EXCLUDED.target_id,			data_file_id = EXCLUDED.data_file_id,			pg_config_target_version_id = EXCLUDED.pg_config_target_version_id,			start_local_dts = EXCLUDED.start_local_dts,			end_utc_dts = EXCLUDED.end_utc_dts,			end_local_dts = EXCLUDED.end_local_dts,			inserted_utc_dts = EXCLUDED.inserted_utc_dts,			first_con_id = EXCLUDED.first_con_id,			last_con_id = EXCLUDED.last_con_id,			records_count = EXCLUDED.records_count,			duration_seconds = EXCLUDED.duration_seconds,			error_occurred = EXCLUDED.error_occurred,			client_user_name = EXCLUDED.client_user_name,			inserted_by = EXCLUDED.inserted_by,			push_method_name = EXCLUDED.push_method_name,			error_text = EXCLUDED.error_text,			result_text = EXCLUDED.result_text          returning 1 as row_counter)         select sum(row_counter)::integer from inserted_rows; $BODY$LANGUAGE sql;  ALTER FUNCTION types_plus.insert_push_audit_v2(types_plus.push_audit_v2[])	OWNER TO user_bender;