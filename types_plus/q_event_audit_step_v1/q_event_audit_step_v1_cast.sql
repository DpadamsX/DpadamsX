-- Create a casting function to convert q_event_audit_step rows into the compound type format q_event_audit_step_v1.-- If q_event_audit_step changes, you can update the casting to handle the modification smoothly.CREATE OR REPLACE FUNCTION types_plus.q_event_audit_step_to_v1 (q_event_audit_step_in q_event_audit_step)  RETURNS q_event_audit_step_v1AS $BODY$                   SELECT			q_event_audit_step_in.id,			q_event_audit_step_in.qevent_id,			q_event_audit_step_in.qaudit_step_id,			q_event_audit_step_in.last_updated_by_data_file_id,			q_event_audit_step_in.updated_dts,			q_event_audit_step_in.created_dts,			q_event_audit_step_in.sort,			q_event_audit_step_in.marked_for_deletion,			q_event_audit_step_in.is_coached,			q_event_audit_step_in.notes,			q_event_audit_step_in.created_by,			q_event_audit_step_in.updated_by,			q_event_audit_step_in.step,			q_event_audit_step_in.qsub_type_id_event,			q_event_audit_step_in.status               $BODY$LANGUAGE sql;  ALTER FUNCTION types_plus.q_event_audit_step_to_v1 (q_event_audit_step_in q_event_audit_step)	OWNER TO user_bender;-- Create/recreate the CAST. Use this to convert q_event_audit_step rows into the q_event_audit_step_v1 compound type format using the following syntax:-- select q_event_audit_step::q_event_audit_step_v1 from q_event_audit_stepDROP CAST IF EXISTS (q_event_audit_step as q_event_audit_step_v1);CREATE CAST (q_event_audit_step as q_event_audit_step_v1) WITH FUNCTION types_plus.q_event_audit_step_to_v1(q_event_audit_step);