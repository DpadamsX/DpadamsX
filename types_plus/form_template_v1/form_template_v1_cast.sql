-- Create a casting function to convert form_template rows into the compound type format form_template_v1.-- If form_template changes, you can update the casting to handle the modification smoothly.CREATE OR REPLACE FUNCTION types_plus.form_template_to_v1 (form_template_in form_template)  RETURNS form_template_v1AS $BODY$                   SELECT			form_template_in.id,			form_template_in.created_dts,			form_template_in.updated_dts,			form_template_in.marked_for_deletion,			form_template_in.name_,			form_template_in.comments_,			form_template_in.updated_by,			form_template_in.created_by,			form_template_in.form_definition               $BODY$LANGUAGE sql;  ALTER FUNCTION types_plus.form_template_to_v1 (form_template_in form_template)	OWNER TO user_bender;-- Create/recreate the CAST. Use this to convert form_template rows into the form_template_v1 compound type format using the following syntax:-- select form_template::form_template_v1 from form_templateDROP CAST IF EXISTS (form_template as form_template_v1);CREATE CAST (form_template as form_template_v1) WITH FUNCTION types_plus.form_template_to_v1(form_template);