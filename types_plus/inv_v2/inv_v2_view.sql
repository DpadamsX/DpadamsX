-- Create a view onto inv formatted as inv_v2.-- If inv changes, you can update the view to handle the modification smoothly.-- Note: This view is automatically a custom type, with an array type to match. See types_plus.insert_inv_v2.DROP VIEW IF EXISTS types_plus.inv_v2 CASCADE;-- Careful!CREATE OR REPLACE VIEW types_plus.inv_v2 AS select id,        item_id,        item_arch_id,        facility_location_id,        standard_faclity_id,        store_at_facility_id,        created_dts,        updated_dts,        serial_no_as_of_dts,        qty,        flow,        flow_long,        par,        last_seen_date,        their_next_repair_date,        last_sterilized_date,        repair_last_repair_date,        is_searched_but_not_found,        marked_for_deletion,        is_found,        is_go_live_perm_printed,        is_sleeping,        is_handwritten_label,        is_wrong_loc,        is_facility_loc_inherited,        needs_repair,        is_deactivated,        is_contents_incomplete,        their_location,        category,        their_name,        their_id,        created_by,        updated_by,        their_id_scrubbed,        crossing_status,        inv_no,        their_raw_name,        comments_,        their_bar_code,        loc_rack,        loc_row,        loc_bin,        loc_note,        serial_no,        data_cleanse_classification,        repair_next_due,        repair_last_repaired_by,        msgs   from inv;ALTER TABLE types_plus.inv_v2    OWNER TO user_change_structure;