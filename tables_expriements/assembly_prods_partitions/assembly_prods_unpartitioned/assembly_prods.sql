-------------------------------------- Define table------------------------------------BEGIN;DROP TABLE IF EXISTS ascendco.assembly_prods CASCADE;CREATE TABLE IF NOT EXISTS ascendco.assembly_prods (    id                       uuid          NOT NULL DEFAULT NULL,    assembly_id              uuid          NOT NULL DEFAULT NULL,    item_prod_id             uuid          NOT NULL DEFAULT NULL,    created_dts              timestamp     NOT NULL DEFAULT 'epoch',    updated_dts              timestamp     NOT NULL DEFAULT 'epoch',    target                   integer       NOT NULL DEFAULT 0,    found_                   integer       NOT NULL DEFAULT 0,    repair                   integer       NOT NULL DEFAULT 0,    backup                   integer       NOT NULL DEFAULT 0,    actual                   integer       NOT NULL DEFAULT 0,    assembly_pos             integer       NOT NULL DEFAULT 0,    prev_actual_for_audit    integer       NOT NULL DEFAULT 0,    broken                   integer       NOT NULL DEFAULT 0,    marked_for_deletion      boolean       NOT NULL DEFAULT false,    created_by               citext        NOT NULL DEFAULT NULL,    updated_by               citext        NOT NULL DEFAULT NULL,    prod_alert_text_ack      citext        NOT NULL DEFAULT NULL,    audit_events             jsonb         NOT NULL DEFAULT '{}'::jsonb,    PRIMARY KEY (id));ALTER TABLE ascendco.assembly_prods	OWNER TO user_change_structure;-------------------------------------- Build statistics------------------------------------/*The Postgres ANALYZE system function collects statistics about each table and column. These valuesare used by the query planner to help generate probabilistic cost estimates for various query plans.When the plans are based on misleading stats, you can have poor performance. Stats can be reconfiguredon a row-by-row basis, and some special extended statistics are supported too.Custom and extended statistics are typically added after we've been accumulating data for some time.See PgBuildStatistics_Extended in IB to declare new statistics objects. For more background, seehttps://ascendco.atlassian.net/wiki/spaces/SON/pages/1723695105/*/-------------------------------------- ANALYZE options-------------------------------------- Placholder and reminder for now. ANALYZE and AUTOVACUUM tunings are *core* Postgres DBA-- skills. But, for the minute, we're not running into trouble. I'm chipping away af figuring-- out when to tune, and how, and when not to tune. ‚Äî DPA-------------------------------------- Build indexes-------------------------------------- Note: Postgres automatically creates a UNIQUE B-tree for the PRIMARY KEY, simple or compound.CREATE INDEX assembly_prods_assembly_id_idx	ON assembly_prods (assembly_id);-------------------------------------- Build partitions-------------------------------------- Not in this test.-------------------------------------- CLUSTER------------------------------------/*Code stub/reminder about CLUSTERing. Not a hard topic, but too big to write up here. Notes and links:https://ascendco.atlassian.net/wiki/spaces/SON/pages/356679683/ALTER TABLE ascendco.assembly_prods    CLUSTER ON ***index name to cluster by here.***;*/-------------------------------------- Add triggers------------------------------------   CREATE TRIGGER trigger_assembly_prods_after_delete            AFTER DELETE               ON ascendco.assembly_prods      REFERENCING OLD TABLE AS deleted_rows         FOR EACH STATEMENTEXECUTE PROCEDURE ascendco.trigger_function_log_deletion_count();  CREATE TRIGGER trigger_assembly_prods_before_truncate            BEFORE TRUNCATE               ON ascendco.assembly_prods         FOR EACH STATEMENTEXECUTE PROCEDURE ascendco.trigger_function_log_truncation_count();-------------------------------------- Manual Permissions for now-------------------------------------- Standard permissions for utility/admin users:GRANT SELECT, INSERT, UPDATE, DELETE ON ascendco.assembly_prods TO rds_super;GRANT SELECT, INSERT, UPDATE, DELETE ON ascendco.assembly_prods TO user_cleanup;GRANT SELECT, INSERT, UPDATE, DELETE ON ascendco.assembly_prods TO user_change_structure;GRANT SELECT ON ascendco.assembly_prods TO user_reporting;-- Adjustable user permissions:GRANT SELECT ON ascendco.assembly_prods TO user_iceberg;GRANT SELECT ON ascendco.assembly_prods TO user_iceberg_remote;GRANT SELECT ON ascendco.assembly_prods TO user_saws;GRANT SELECT, INSERT, UPDATE ON ascendco.assembly_prods TO user_sonar;GRANT SELECT ON ascendco.assembly_prods TO user_leviathan;COMMIT;