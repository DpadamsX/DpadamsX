-- Create a casting function to convert assembly_prods rows into the compound type format assembly_prods_v1.-- If assembly_prods changes, you can update the casting to handle the modification smoothly.CREATE OR REPLACE FUNCTION types_plus.assembly_prods_to_v1 (assembly_prods_in assembly_prods)  RETURNS assembly_prods_v1AS $BODY$                   SELECT			assembly_prods_in.id,			assembly_prods_in.data_file_id,			assembly_prods_in.assembly_id,			assembly_prods_in.item_prod_id,			assembly_prods_in.created_dts,			assembly_prods_in.updated_dts,			assembly_prods_in.target,			assembly_prods_in.found_,			assembly_prods_in.repair,			assembly_prods_in.backup,			assembly_prods_in.actual,			assembly_prods_in.assembly_pos,			assembly_prods_in.marked_for_deletion,			assembly_prods_in.created_by,			assembly_prods_in.updated_by,			assembly_prods_in.prod_alert_text_ack,			assembly_prods_in.audit_events               $BODY$LANGUAGE sql;  ALTER FUNCTION types_plus.assembly_prods_to_v1 (assembly_prods_in assembly_prods)	OWNER TO user_bender;-- Create/recreate the CAST. Use this to convert assembly_prods rows into the assembly_prods_v1 compound type format using the following syntax:-- select assembly_prods::assembly_prods_v1 from assembly_prodsDROP CAST IF EXISTS (assembly_prods as assembly_prods_v1);CREATE CAST (assembly_prods as assembly_prods_v1) WITH FUNCTION types_plus.assembly_prods_to_v1(assembly_prods);