/*Unusual case here, not cases I want in the standard check. What these cases are about isfeeding tests through the IceBerg code that runs the unit tests against Postgres. The logicfor determining if a test passed or failed is in *4D*, because writing all of that in PL/PgSQLwould be much, much harder. So, need to test the 4D code. I could set up some unit tests in4D, but decided to build test cases that generate results that exercise the various types,comparisons, and comparison objects. As a result, some of the tests *should* fail. Like, ifyou have a result type of 'foo', that test should fail because that's a bogus type. The net ofthis is that a bunch of the test_result values show "fail." The ones that I expect to fail havenames starting with "Should fail".Note:There are a lot of synonyms going on for result types and comparison options. LikeBlank = Empty for a response type.CI, Case-Insensitive, Case Insensitive, Case-blind, Case blind are all the same thing for a comparison option.These values are case-blind.I'm not keeping these tests in the main body of tests cases, but do build it in with a fresh squidsetup, and can run this file any time I want to modify and recheck PgTest_CompareTheResults.*/------------------------------------------------------- Response type = 'Foo'------------------------------------------------------- Non-matches: This *should* fail in the Postgres test run.select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Foo',E'select \'A\'','a','','Foo','{"Case":"Blind"}','Fail','{user_iceberg}',false);------------------------------------------------------- Response type = Blank & option set-----------------------------------------------------select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Blank: Comparison options aren''t supported','select null','','','Blank','{"Case":"Blind"}','Fail','{user_iceberg}',false);------------------------------------------------------- Response type = Blank------------------------------------------------------- Goodselect null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Blank: Good','select null','','','Blank','{}','Pass','{user_iceberg}',false);-- Bad: These *should* fail in the Postgres test run.select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Blank: Bad expected result','select null','1','','Blank','{}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Blank: Bad actual result','select 1','','','Blank','{}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Blank: Bad expected error','select null','','ERROR: 12345','Blank','{}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Blank: Bad actual error','select bad_name','','','Blank','{}','Fail','{user_iceberg}',false);------------------------------------------------------- Response type = empty & option is set-----------------------------------------------------select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Empty: Text, comparison option unknown','select null','','','Empty','{"comparison":"starts with"}','Fail','{user_iceberg}',false);------------------------------------------------------- Response type = Empty------------------------------------------------------- Goodselect null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Empty: Good','select null','','','Empty','{}','Pass','{user_iceberg}',false);-- Bad: These *should* fail in the Postgres test run.select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Empty: Bad expected result','select null','1','','Empty','{}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Empty: Bad actual result','select 1','','','Empty','{}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Empty: Bad expected error','select null','','ERROR: 12345','Empty','{}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Empty: Bad actual error','select bad_name','','','Empty','{}','Fail','{user_iceberg}',false);------------------------------------------------------- Response type = text & option is unknown-----------------------------------------------------select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: case = it depends: Bad option',E'select \'A\'','a','','Text','{"case":"it depends"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: match = sort of: Bad option',E'select \'A\'','a','','Text','{"comparison":"sort of"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: clear_whitespace = not sure: Bad option',E'select \'A\'','a','','Text','{"clear_whitespace":"not sure"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: title_comparison = whatever: Bad option',E'select \'A\'','','Error: Bad column title comparison option: whatever','Text','{"title_comparison":"whatever"}','Fail','{user_iceberg}',false);------------------------------------------------------- Response type = text & case is strict------------------------------------------------------- Matchesselect null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Strict: Good match',E'select \'A\'','A','','Text','{"case":"strict"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-sensitive: Good match',E'select \'A\'','A','','Text','{"case":"Case-sensitive"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case sensitive: Good match',E'select \'A\'','A','','Text','{"case":"Case sensitive"}','Pass','{user_iceberg}',false);-- Non-matches: These *should* fail in the Postgres test run.select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Strict: Good non-match',E'select \'A\'','a','','Text','{"case":"strict"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-sensitive: Good non-match',E'select \'A\'','a','','Text','{"case":"Case sensitive"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case sensitive: Good non-match',E'select \'A\'','a','','Text','{"case":"Case sensitive"}','Pass','{user_iceberg}',false);--------------------------------------------------------- Response type = text & case is blind--------------------------------------------------------- Matchesselect null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: Good match',E'select \'A\'','A','','Text','{"Case":"Blind"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case blind: Good match',E'select \'A\'','A','','Text','{"case":"Case-blind"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-insensitive: Good match',E'select \'A\'','A','','Text','{"case":"Case-insensitive"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case insensitive: Good match',E'select \'A\'','A','','Text','{"case":"Case insensitive"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: CI: Good match',E'select \'A\'','A','','Text','{"case":"CI"}','Pass','{user_iceberg}',false);-- Non-matches: These *should* fail in the Postgres test run.select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-blind: Good non-match',E'select \'A\'','B','','Text','{"Case":"Blind"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case blind: Good non-match',E'select \'A\'','B','','Text','{"case":"Case-blind"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-insensitive: Good non-match',E'select \'A\'','B','','Text','{"case":"Case-insensitive"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case insensitive: Good non-match',E'select \'A\'','B','','Text','{"case":"Case insensitive"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: CI: Good non-match',E'select \'A\'','B','','Text','{"case":"CI"}','Pass','{user_iceberg}',false);------------------------------------------------------------ Response type = text & comaprison is begins with, case-blind------------------------------------------------------------ Matchesselect null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: begins: Good match',E'select \'ABC\'','AB','','Text','{"comparison":"begins"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: begins with: Good match',E'select \'ABC\'','AB','','Text','{"comparison":"begins with"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: begins-with: Good match',E'select \'ABC\'','AB','','Text','{"comparison":"begins-with"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: starts: Good match',E'select \'ABC\'','AB','','Text','{"comparison":"starts"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: starts with: Good match',E'select \'ABC\'','AB','','Text','{"comparison":"starts with"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: starts-with: Good match',E'select \'ABC\'','AB','','Text','{"comparison":"starts-with"}','Pass','{user_iceberg}',false);-- Non-matches: These *should* fail in the Postgres test run.select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-blind: begins: Good non-match',E'select \'ABC\'','FOO','','Text','{"comparison":"begins"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-blind: begins with: Good non-match',E'select \'ABC\'','FOO','','Text','{"comparison":"begins with"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-blind: begins-with: Good non-match',E'select \'ABC\'','FOO','','Text','{"comparison":"begins-with"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-blind: starts: Good non-match',E'select \'ABC\'','FOO','','Text','{"comparison":"starts"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-blind: starts with: Good non-match',E'select \'ABC\'','FOO','','Text','{"comparison":"starts with"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-blind: starts-with: Good non-match',E'select \'ABC\'','FOO','','Text','{"comparison":"starts-with"}','Fail','{user_iceberg}',false);------------------------------------------------------------------------------- Response type = text & comaprison is equals, case-blind------------------------------------------------------------------------------- Matchesselect null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: equals: Good match',E'select \'ABC\'','AbC','','Text','{"case":"blind","comparison":"equals"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: =: Good match',E'select \'ABC\'','AbC','','Text','{"case":"blind","comparison":"="}','Pass','{user_iceberg}',false);-- Non-matches: These *should* fail in the Postgres test run.select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: equals: Good non-match',E'select \'ABC\'','AbCd','','Text','{"case":"blind","comparison":"equals"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: =: Good non-match',E'select \'ABC\'','AbCd','','Text','{"case":"blind","comparison":"="}','Fail','{user_iceberg}',false);------------------------------------------------------------------------------- Response type = text & comaprison is equals, case-sensitive------------------------------------------------------------------------------- Matchesselect null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: case-sensitive: equals: Good match',E'select \'ABC\'','ABC','','Text','{"case":"sensitive","comparison":"equals"}','Pass','{user_iceberg}',false);-- Non-matches: These *should* fail in the Postgres test run.select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: case-sensitive: equals: Good non-match',E'select \'ABC\'','AbC','','Text','{"case":"sensitive","comparison":"equals"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: case-sensitive: =: Good non-match',E'select \'ABC\'','AbC','','Text','{"case":"sensitive","comparison":"="}','Fail','{user_iceberg}',false);------------------------------------------------------------------------------- Response type = text & comaprison is not equals, case-blind------------------------------------------------------------------------------- Matchesselect null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: not equals: Good match',E'select \'ABC\'','AbCd','','Text','{"case":"blind","comparison":"not equals"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: does not equal: Good match',E'select \'ABC\'','AbCd','','Text','{"case":"blind","comparison":"does not equal"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: #: Good match',E'select \'ABC\'','AbCd','','Text','{"case":"blind","comparison":"#"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: <>: Good match',E'select \'ABC\'','AbCd','','Text','{"case":"blind","comparison":"<>"}','Pass','{user_iceberg}',false);-- Non-matches: These *should* fail in the Postgres test run.select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: not equals: Good non-match',E'select \'ABC\'','ABC','','Text','{"case":"blind","comparison":"not equals"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: does not equal: Good non-match',E'select \'ABC\'','ABC','','Text','{"case":"blind","comparison":"does not equal"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: #: Good non-match',E'select \'ABC\'','ABC','','Text','{"case":"blind","comparison":"#"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: <>: Good non-match',E'select \'ABC\'','ABC','','Text','{"case":"blind","comparison":"<>"}','Pass','{user_iceberg}',false);------------------------------------------------------------------------------- Response type = text & comaprison is not equals, case-sensitive------------------------------------------------------------------------------- Matchesselect null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: case-sensitive: not equals: Good match',E'select \'ABC\'','AbC','','Text','{"case":"blind","comparison":"not equals"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: case-sensitive: does not equal: Good match',E'select \'ABC\'','AbC','','Text','{"case":"blind","comparison":"does not equal"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: case-sensitive: #: Good match',E'select \'ABC\'','AbC','','Text','{"case":"blind","comparison":"#"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: case-sensitive: <>: Good match',E'select \'ABC\'','AbC','','Text','{"case":"blind","comparison":"<>"}','Pass','{user_iceberg}',false);-- Non-matches: These *should* fail in the Postgres test run.select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: case-sensitive: not equals: Good non-match',E'select \'ABC\'','ABC','','Text','{"case":"blind","comparison":"not equals"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: case-sensitive: does not equal: Good non-match',E'select \'ABC\'','ABC','','Text','{"case":"blind","comparison":"does not equal"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: case-sensitive: #: Good non-match',E'select \'ABC\'','ABC','','Text','{"case":"blind","comparison":"#"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: case-sensitive: <>: Good non-match',E'select \'ABC\'','ABC','','Text','{"case":"blind","comparison":"<>"}','Pass','{user_iceberg}',false);--------------------------------------------------------------------- Response type = text & comaprison is begins with, case-sensitive--------------------------------------------------------------------- Matchesselect null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-sensitive: begins: Good match',E'select \'ABC\'','AB','','Text','{"case":"blind","comparison":"begins"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-sensitive: begins with: Good match',E'select \'ABC\'','AB','','Text','{"case":"blind","comparison":"begins with"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-sensitive: begins-with: Good match',E'select \'ABC\'','AB','','Text','{"case":"blind","comparison":"begins-with"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-sensitive: starts: Good match',E'select \'ABC\'','AB','','Text','{"case":"blind","comparison":"starts"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-sensitive: starts with: Good match',E'select \'ABC\'','AB','','Text','{"case":"blind","comparison":"starts with"}','Pass','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-sensitive: starts-with: Good match',E'select \'ABC\'','AB','','Text','{"case":"blind","comparison":"starts-with"}','Pass','{user_iceberg}',false);-- Non-matches: These *should* fail in the Postgres test run.select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-sensitive: begins: Good non-match',E'select \'ABC\'','aB','','Text','{"case":"blind","comparison":"begins"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-sensitive: begins with: Good non-match',E'select \'ABC\'','aB','','Text','{"case":"blind","comparison":"begins with"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-sensitive: begins-with: Good non-match',E'select \'ABC\'','aB','','Text','{"case":"blind","comparison":"begins-with"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-sensitive: starts: Good non-match',E'select \'ABC\'','aB','','Text','{"case":"blind","comparison":"starts"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-sensitive: starts with: Good non-match',E'select \'ABC\'','aB','','Text','{"case":"blind","comparison":"starts with"}','Fail','{user_iceberg}',false);select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-sensitive: starts-with: Good non-match',E'select \'ABC\'','aB','','Text','{"case":"blind","comparison":"starts-with"}','Fail','{user_iceberg}',false);------------------------------------------------------------- Response type = text & comaprison is contains, case-blind------------------------------------------------------------- Matchesselect null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: contains: Good match',E'select \'ABC\'','AB','','Text','{"comparison":"contains"}','Pass','{user_iceberg}',false);-- Non-matches: These *should* fail in the Postgres test run.select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-blind: contains: Good non-match',E'select \'ABC\'','FOO','','Text','{"comparison":"contains"}','Fail','{user_iceberg}',false);------------------------------------------------------------- Response type = text & comaprison is contains, case-sensitive------------------------------------------------------------- Matchesselect null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Text: Case-blind: contains: Good match',E'select \'ABC\'','aB','','Text','{"comparison":"contains"}','Pass','{user_iceberg}',false);-- Non-matches: These *should* fail in the Postgres test run.select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Text: Case-blind: contains: Good non-match',E'select \'ABC\'','aB','','Text','{"comparison":"contains"}','Fail','{user_iceberg}',false);------------------------------------------------------------- Response type = longint------------------------------------------------------------- Matchesselect null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','result_type = Longint: Good match','select 3','3','','Longint','{}','Pass','{user_iceberg}',false);-- No real way to do non-matches here that I can think of, Rob doesn't support NULL.------------------------------------------------------- Response type = empty & option is set-----------------------------------------------------select null from test_case_setup('function','ib_not_postgres','PgTest_CompareTheResults','','Should fail: result_type = Longint: Comparison options aren''t supported','select 5','5','','Longint','{"Case":"Blind"}','Pass','{user_iceberg}',false);