------------------------------------------------------ CREATE FUNCTION on_ddl_drop----------------------------------------------------DROP FUNCTION IF EXISTS event_triggers.on_ddl_drop() CASCADE;CREATE FUNCTION event_triggers.on_ddl_drop()        RETURNS event_trigger AS$BODY$BEGININSERT INTO dba.ddl_event_log (			  classid,			  objid,			  objsubid,			  is_temporary,			  normal,			  original,			  object_identity,			  object_name,			  object_type,			  schema_name,			  address_args,			  address_names,			  trigger_event)	  SELECT ec.classid,			  ec.objid,			  ec.objsubid,			  ec.is_temporary,			  ec.normal,			  ec.original,			  ec.object_identity,			  ec.object_name,			  ec.object_type,			  ec.schema_name,			  ec.address_args,			  ec.address_names,			  TG_EVENT       FROM pg_event_trigger_dropped_objects() AS ec  LEFT JOIN pg_proc on pg_proc.oid = ec.objid;END$BODY$	LANGUAGE plpgsql;-- The code above defines the function, but does *not* build the event_trigger binding.-- That code is handled in a distinct operation.