DROP FUNCTION IF EXISTS dba.numeric_field_buckets(text,text,int4);-- Calculate a bunch of stats on a numeric field to help identify outliers.CREATE OR REPLACE FUNCTION dba.numeric_field_buckets (table_name_in text, field_name text, bucket_count int4)  RETURNS TABLE (	table_name text, 	column_name text, 	bucket int4,	min int4, 	max int4, 	count int8,	bar text)		AS $BODY$  BEGIN    RETURN QUERY EXECUTE    'with 	range_stats as	(select min(' || quote_ident(field_name) || '),			max(' || quote_ident(field_name) || ')			 		   from ' || quote_ident(table_name_in) || '),			histogram as	(select  '|| quote_literal(table_name_in) || ' as table_name,         	 '|| quote_literal(field_name)    || ' as column_name,			  width_bucket(num_inst, range_stats.min, range_stats.max, $3 - 1) as bucket,         	  min(' || quote_ident(field_name) || '),         	  max(' || quote_ident(field_name) || '),			  count(*) as frequency		    from ' || quote_ident(table_name_in) || ',			 range_stats	group by bucket    	order by bucket)		 select table_name,			column_name,			bucket,			min,			max,			frequency,			repeat ('|| quote_literal('â–‡') || ',				   (frequency::float					 / max(frequency) over() * ($3 - 1) * 2)::int			) as bar	   from histogram'	    USING table_name, field_name, bucket_count;	END;$BODY$  LANGUAGE plpgsql;ALTER FUNCTION dba.numeric_field_buckets (text, text, int4) 	OWNER TO user_bender;