CREATE OR REPLACE FUNCTION dba.show_table_rights(t_name text)	RETURNS TABLE(		"Table_Name" name, 		"User_Name" name, 		"SELECT" text, 		"INSERT" text, 		"UPDATE" text, 		"DELETE" text, 		"TRUNCATE" text, 		"REFERENCES" text, 		"TRIGGER" text)AS $BODY$	SELECT 				t.tablename,        u.usename,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', t.tablename), 'select') = TRUE then 'X' ELSE ' ' END AS select,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', t.tablename), 'insert')= TRUE then 'X' ELSE ' ' END AS insert,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', t.tablename), 'update') = TRUE then 'X' ELSE ' ' END AS update,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', t.tablename), 'delete') = TRUE then 'X' ELSE ' ' END AS delete,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', t.tablename), 'truncate') = TRUE then 'X' ELSE ' ' END AS truncate,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', t.tablename), 'references') = TRUE then 'X' ELSE ' ' END AS references,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', t.tablename), 'trigger') = TRUE then 'X' ELSE ' ' END AS trigger					FROM    pg_tables t,         					pg_user u                 	WHERE	  t.tablename = t_name		ORDER BY u.usename;$BODY$	LANGUAGE sql	STABLE;ALTER FUNCTION dba.show_table_rights(text)	OWNER TO user_bender;