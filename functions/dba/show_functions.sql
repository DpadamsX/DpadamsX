CREATE OR REPLACE FUNCTION dba.show_functions()  RETURNS TABLE(  	schema_name name,	function_name name,	function_type name,	function_owner name,	run_as text,	language name,	return_type name,	strict text,	returns_set text,	comment text)AS $BODY$ 	SELECT	n.nspname AS schema_name,	P.proname AS function_name,	typ.typname AS function_type,	pg_get_userbyid ( P.proowner ) AS function_owner,	CASE	WHEN P.prosecdef = TRUE THEN 'owner' ELSE 'invoker' END AS run_as,		l.lanname AS language,	typ.typname AS return_type,	CASE WHEN P.proisstrict = TRUE THEN 'True' ELSE 'False' END AS strict,	CASE WHEN P.proretset =   TRUE THEN 'True' ELSE 'False' END AS returns_set,	obj_description ( P.oid ) AS COMMENT FROM	pg_proc	P LEFT JOIN pg_type typ ON typ.oid = P.prorettype	LEFT JOIN pg_namespace typns ON typns.oid = typ.typnamespace	LEFT JOIN pg_namespace n ON n.oid = P.pronamespace	LEFT JOIN pg_language l ON l.oid = P.prolang	LEFT JOIN pg_user u ON P.proowner = u.usesysid	LEFT JOIN pg_database d ON d.datname = current_database () WHERE	P.prokind IN ('f','p') -- Function or Procedure	AND n.nspname <> 'information_schema' 	AND n.nspname <> 'pg_catalog' ORDER BY	n.nspname,	P.proname ASC 	$BODY$	LANGUAGE sql STABLE	COST 100	ROWS 1000;	ALTER FUNCTION dba.show_functions () 	OWNER TO user_bender;