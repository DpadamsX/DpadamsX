CREATE OR REPLACE FUNCTION dba.show_view_rights(v_name text)	RETURNS TABLE(		"View_Name" name,		"User_Name" name,		"SELECT" text,		"INSERT" text,		"UPDATE" text,		"DELETE" text,		"TRUNCATE" text,		"REFERENCES" text,		"TRIGGER" text)AS $BODY$	SELECT		v.viewname,        u.usename,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', v.viewname), 'select') = TRUE then 'X' ELSE ' ' END AS select,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', v.viewname), 'insert')= TRUE then 'X' ELSE ' ' END AS insert,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', v.viewname), 'update') = TRUE then 'X' ELSE ' ' END AS update,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', v.viewname), 'delete') = TRUE then 'X' ELSE ' ' END AS delete,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', v.viewname), 'truncate') = TRUE then 'X' ELSE ' ' END AS truncate,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', v.viewname), 'references') = TRUE then 'X' ELSE ' ' END AS references,        CASE WHEN has_table_privilege(u.usename, concat(schemaname, '.', v.viewname), 'trigger') = TRUE then 'X' ELSE ' ' END AS trigger	FROM    pg_views v,			pg_user u	WHERE	  v.viewname = v_name	ORDER BY u.usename;$BODY$	LANGUAGE sql	STABLE;ALTER FUNCTION dba.show_view_rights(text)	OWNER TO user_bender;