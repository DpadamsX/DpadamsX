DROP FUNCTION IF EXISTS dba.numeric_field_stats(text,text);-- Calculate a bunch of stats on a numeric field to help identify outliers.CREATE OR REPLACE FUNCTION dba.numeric_field_stats (table_name_in text, field_name text)  RETURNS TABLE (	table_name text, 	column_name text, 	min int4, 	max int4, 	avg float4, 	variance float4, 	stddev float4,     stddev_1_above float4,    stddev_1_below float4,    stddev_2_above float4,    stddev_2_below float4,    stddev_3_above float4,    stddev_3_below float4,    stddev_4_above float4,    stddev_4_below float4,    stddev_5_above float4,    stddev_5_below float4,	q1 float4, 	q2 float4, 	q3 float4, 	p95 float4, 	p99 float4, 	iqr float4)	AS $BODY$  BEGIN    RETURN QUERY EXECUTE         'with 	 stats as	 (select  coalesce(min( ' || quote_ident(field_name) || '),0)::int4 as min,			  coalesce(max( ' || quote_ident(field_name) || '),0)::int4 as max,			  coalesce(avg( ' || quote_ident(field_name) || '),0)::float4 as avg,			  			  coalesce(variance(' || quote_ident(field_name) || '),0)::float4 as variance,			  coalesce(stddev(' || quote_ident(field_name) || '),0)::float4 as stddev,			  			  coalesce(percentile_cont(0.25) within group (order by ' || quote_ident(field_name) || ' asc),0)::float4 as q1,			  coalesce(percentile_cont(0.50) within group (order by ' || quote_ident(field_name) || ' asc),0)::float4 as q2,			  coalesce(percentile_cont(0.75) within group (order by ' || quote_ident(field_name) || ' asc),0)::float4 as q3,			  coalesce(percentile_cont(0.95) within group (order by ' || quote_ident(field_name) || ' asc),0)::float4 as p95,			  coalesce(percentile_cont(0.99) within group (order by ' || quote_ident(field_name) || ' asc),0)::float4 as p99	   from ' || quote_ident(table_name_in) || ')   	 select ' || quote_literal(table_name_in) || ' as table_name,         	' || quote_literal(field_name) || ' as column_name,             min,             max,             avg,             variance,             stddev,             avg + (stddev * 1)::float4 as stddev_1_above,             avg - (stddev * 1)::float4 as stddev_1_below,             avg + (stddev * 2)::float4 as stddev_2_above,             avg - (stddev * 2)::float4 as stddev_2_below,             avg + (stddev * 3)::float4 as stddev_3_above,             avg - (stddev * 3)::float4 as stddev_3_below,             avg + (stddev * 4)::float4 as stddev_4_above,             avg - (stddev * 4)::float4 as stddev_4_below,             avg + (stddev * 5)::float4 as stddev_5_above,             avg - (stddev * 5)::float4 as stddev_5_below,                          q1,             q2,             q3,             p95,             p99, 			(q3 - q1)::float4 as iqr				from stats'	    USING table_name, field_name;	END;$BODY$  LANGUAGE plpgsql;ALTER FUNCTION dba.numeric_field_stats (text, text) 	OWNER TO user_bender;