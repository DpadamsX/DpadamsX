/* This code is built in IceBerg by PgBuild_ClearDeletedRecords. It reads the pgIOMap definitions to see which table(s) haveauto-delete enabled. Do *not* update this method by hand!Use PgBuild_ClearDeletedRecords on Dev to change the rules.After that, push the code to the Postgres database. The point here is to define the rules in Dev and enforcethem universally on Postgres. See:https://ascendco.atlassian.net/wiki/spaces/SON/pages/767459342/Deleting+Records+on+Postgres*/CREATE OR REPLACE FUNCTION ascendco.clear_deleted_records()  RETURNS SETOF pg_catalog.void AS $BODY$BEGIN     DELETE FROM ascendco.analytic_productivity WHERE marked_for_deletion = true;     ANALYZE  ascendco.analytic_productivity;     DELETE FROM ascendco.analytic_sterilizer_load WHERE marked_for_deletion = true;     ANALYZE  ascendco.analytic_sterilizer_load;     DELETE FROM ascendco.analytic_sterilizer_loadinv WHERE marked_for_deletion = true;     ANALYZE  ascendco.analytic_sterilizer_loadinv;     DELETE FROM ascendco.item_type WHERE marked_for_deletion = true;     ANALYZE  ascendco.item_type;     DELETE FROM ascendco.specialty WHERE marked_for_deletion = true;     ANALYZE  ascendco.specialty;     DELETE FROM ascendco.sterilize_method WHERE marked_for_deletion = true;     ANALYZE  ascendco.sterilize_method;END;$BODY$  LANGUAGE plpgsql VOLATILE  COST 100  ROWS 1000;  ALTER FUNCTION ascendco.clear_deleted_records() 	OWNER TO user_bender;