-- Woah, *way* too hard to call this by hand, I'm setting up a test case setup screen in IB. -- DPACREATE OR REPLACE FUNCTION dba.test_case_setup (	object_class_in       citext,	object_schema_in      citext,	object_name_in        citext,	function_signature_in citext,	test_name_in          citext,	test_code_in          text,	expected_response_in  citext,	expected_error_in     citext,	response_type_in      citext,	comparison_option_in  citext,	expected_outcome_in   citext	-- Pass, Warning, or Fail)RETURNS test_caseAS $BODY$BEGIN-- Note that the test_case table itself has constraints to make sure that the UPSERT works,-- and that you enter at least an expected response or error.RAISE NOTICE 'object_class_in(%)', object_class_in;RAISE NOTICE 'object_schema_in(%)', object_schema_in;RAISE NOTICE 'object_name_in(%)', object_name_in;RAISE NOTICE 'function_signature_in(%)', function_signature_in;RAISE NOTICE 'test_name_in(%)', test_name_in;RAISE NOTICE 'expected_response_in(%)', expected_response_in;RAISE NOTICE 'expected_error_in(%)', expected_error_in;RAISE NOTICE 'expected_outcome_in(%)', expected_outcome_in;RAISE NOTICE 'response_type_in(%)', response_type_in;RAISE NOTICE 'comparison_option_in(%)',comparison_option_in;INSERT INTO test_case (               object_class,               object_schema,               object_name,               function_signature,               test_name,               test_code,               expected_response,               expected_error,               response_type,               comparison_option,               expected_outcome)       VALUES (               object_class_in,               object_schema_in,               object_name_in,               function_signature_in,               test_name_in,               test_code_in,               expected_response_in,               expected_error_in,               response_type_in,               comparison_option_in,               expected_outcome_in)-- Using a synthetic uuid id field, but there's also a uniqueness check on-- object_class,object_schema,object_name,function_signature,test_name		ON CONFLICT ON CONSTRAINT test_case_unique_signature			DO UPDATE SET			   test_code        = test_code_in,			   expected_response = expected_response_in,			   expected_error    = expected_error_in,			   response_type     = response_type_in,			   comparison_option = comparison_option_in,			   expected_outcome  = expected_outcome_in       RETURNING *;END$BODY$	LANGUAGE plpgsql;ALTER FUNCTION dba.test_case_setup (citext,citext,citext,citext,citext,text,citext,citext,citext,citext,citext)	OWNER TO user_bender;