DROP FUNCTION IF EXISTS ascendco.find_rare_and_large (text, text ,int4 ,int4 ,text);CREATE OR REPLACE FUNCTION ascendco.find_rare_and_large (	table_name text,	field_name text,	frequency_threshold int4,	value_threshold int4, 	target_server text default 'All')	  RETURNS TABLE (	value_ int4, 	frequency_percentile int4, 	value_percentile int4) AS $BODY$  BEGINIF (target_server = 'All') THEN    RETURN QUERY EXECUTE '	with frequency_counts as (	  select ' || quote_ident(field_name) || '::INT as value_,	   	      count(*) as frequency	    from ' || quote_ident(table_name) || '	   where ' || quote_ident(field_name) || ' > 0	group by 1 	order by 2),				frequency_percentiles as (			  select *,	         ntile(100) over (order by frequency asc) as frequency_percentile,	         ntile(100) over (order by value_ asc) as value_percentile	   from frequency_counts)		select value_,	       frequency_percentile,	       value_percentile	       	  from frequency_percentiles	  	   where frequency_percentile < $3 and	         value_ > 	         (select value_ 	          from frequency_counts	          where value_percentile > $4	          limit 1) 	          	order by 1,2,3'		using  table_name, field_name, frequency_threshold, value_threshold;ELSE    RETURN QUERY EXECUTE '	with frequency_counts as (	  select ' || quote_ident(field_name) || '::INT as value_,	   	      count(*) as frequency	    from ' || quote_ident(table_name) || ' 	inner join data_file_info on (data_file_info.id = ' || quote_ident(table_name) || '.data_file_id)	   where ' || quote_ident(field_name) || ' > 0 and	         data_file_info.server_name_ = $5	group by 1 	order by 2),				frequency_percentiles as (			  select *,	         ntile(100) over (order by frequency asc) as frequency_percentile,	         ntile(100) over (order by value_ asc) as value_percentile	   from frequency_counts)		select value_,	       frequency_percentile,	       value_percentile	       	  from frequency_percentiles	  	   where frequency_percentile < $3 and	         value_ > 	         (select value_ 	          from frequency_counts	          where value_percentile >$4	          limit 1) 	          	order by 1,2,3'		using  table_name, field_name, frequency_threshold, value_threshold, target_server;END IF;END;$BODY$  LANGUAGE plpgsql VOLATILE  COST 100  ROWS 1000;ALTER FUNCTION find_rare_and_large(text,text,int,int,text) OWNER TO user_bender;