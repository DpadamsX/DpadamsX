----------------------------------------------- CREATE FUNCTION event trigger---------------------------------------------DROP FUNCTION IF EXISTS event_triggers.on_create_function CASCADE;CREATE FUNCTION event_triggers.on_create_function()        RETURNS event_trigger LANGUAGE plpgsql AS $$BEGINinsert	into custom_function (	proc_oid,	input_signature,	function_name,	schema_oid,	owner_oid,	language_oid,	return_type_oid,	is_security_definer,	runs_as,	fails_on_null_input,	returns_table,	function_kind_code,	function_acl,	method_body)select	oid,		proargtypes,		proname::text,		pronamespace,		proowner,		prolang,		prorettype,		prosecdef,		'',		proisstrict,		proretset,		prokind,		proacl,		prosrc   from pg_proc where pg_proc.oid IN (SELECT objid FROM pg_event_trigger_ddl_commands()) ON CONFLICT 	ON CONSTRAINT custom_function_signature_unique 		DO UPDATE SET 			dirty_created = true, 			dirty_dropped = false;END$$;DROP EVENT TRIGGER IF EXISTS on_create_ddl_event;CREATE EVENT TRIGGER on_create_ddl_event   ON ddl_command_end   WHEN TAG IN ('CREATE FUNCTION')   EXECUTE FUNCTION event_triggers.on_create_function();